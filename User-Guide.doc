Date: Thu, 16 Sep 2021 06:05:45 +0000 (UTC)
Message-ID: <1728640607.25.1631772345683@3131e2a84994>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_24_127935698.1631772345682"

------=_Part_24_127935698.1631772345682
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>DSO Tool - User Guide</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        table {
            border: solid 1px;
            border-collapse: collapse;
        }

        table td, table th {
            border: solid 1px;
            padding: 5px;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    /* CONF-28544 cannot print multiple pages in IE */
    #splitter-content {
        position: relative !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }

    .no-print, .no-print * {
        display: none !important;
    }
}
-->
    </style>
</head>
<body>
    <h1>DSO Tool - User Guide</h1>
    <div class=3D"Section1">
        <style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1631772342634 {padding: 0px;}
div.rbtoc1631772342634 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1631772342634 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style>
<div class=3D"toc-macro rbtoc1631772342634">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#DSOTool-UserGuide-DSOCLIInstallation">DSO CLI Installa=
tion</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#DSOTool-UserGuide-InstallingPyEnv">Installing PyEnv</a=
>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#DSOTool-UserGuide-MacUsers">Mac Users</a></li>=20
<li><a href=3D"#DSOTool-UserGuide-AmazonLinuxUsers">Amazon Linux Users=
</a></li>=20
<li><a href=3D"#DSOTool-UserGuide-WindowsUsers">Windows Users</a></li>=
=20
</ul> </li>=20
<li><a href=3D"#DSOTool-UserGuide-InstallingPython">Installing Python<=
/a></li>=20
<li><a href=3D"#DSOTool-UserGuide-InstallingDSO">Installing DSO</a></l=
i>=20
</ul> </li>=20
<li><a href=3D"#DSOTool-UserGuide-DSOCLIUpgrading">DSO CLI Upgrading</=
a></li>=20
<li><a href=3D"#DSOTool-UserGuide-ConfigurationManagement">Configurati=
on Management</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#DSOTool-UserGuide-Contexts">Contexts</a></li>=20
<li><a href=3D"#DSOTool-UserGuide-Configuringapplications">Configuring=
 applications</a></li>=20
<li><a href=3D"#DSOTool-UserGuide-ManagingParameters">Managing Paramet=
ers</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#DSOTool-UserGuide-Addingparameters">Adding parameters<=
/a></li>=20
<li><a href=3D"#DSOTool-UserGuide-Deletingparameters">Deleting paramet=
ers</a></li>=20
<li><a href=3D"#DSOTool-UserGuide-Listingparameters">Listing parameter=
s</a></li>=20
<li><a href=3D"#DSOTool-UserGuide-Gettingthevalueofaparameter">Getting=
 the value of a parameter</a></li>=20
</ul> </li>=20
<li><a href=3D"#DSOTool-UserGuide-ManagingSecrets">Managing Secrets</a=
>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#DSOTool-UserGuide-Addingsecrets">Adding secrets</a></l=
i>=20
<li><a href=3D"#DSOTool-UserGuide-Deletingsecrets">Deleting secrets</a=
></li>=20
<li><a href=3D"#DSOTool-UserGuide-Listingsecrets">Listing secrets</a><=
/li>=20
<li><a href=3D"#DSOTool-UserGuide-Gettingthevalueofasecret">Getting th=
e value of a secret</a></li>=20
</ul> </li>=20
<li><a href=3D"#DSOTool-UserGuide-ManagingTemplates">Managing Template=
s</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#DSOTool-UserGuide-Addingtemplates">Adding templates</a=
></li>=20
<li><a href=3D"#DSOTool-UserGuide-Deletingtemplates">Deleting template=
s</a></li>=20
<li><a href=3D"#DSOTool-UserGuide-Listingtemplates">Listing templates<=
/a></li>=20
<li><a href=3D"#DSOTool-UserGuide-Gettingthecontentsofatemplate">Getti=
ng the contents of a template</a></li>=20
</ul> </li>=20
</ul> </li>=20
</ul>=20
</div>
<h1 id=3D"DSOTool-UserGuide-DSOCLIInstallation">DSO CLI Installation</=
h1>
<p>To install the DSO tool, you need to have Python version 3 (or higher) a=
nd PIP installed. It is recommended to use PyEnv to manage and run differen=
t versions of Python side-by-side on your machine. If you have already Pyth=
on v3+ and PIP installed, skip the next section. To check the version of yo=
ur PIP and Python, run the following commands:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">python =
--version
pip --version</pre>=20
</div>
</div>
<h2 id=3D"DSOTool-UserGuide-InstallingPyEnv">Installing PyEnv</h2>
<h3 id=3D"DSOTool-UserGuide-MacUsers">Mac Users</h3>
<p>The easiest way to install PyEnv on Mac is using Homebrew. If you have i=
t already installed, skip to step 3. </p>
<p style=3D"margin-left: 30.0px;"><strong>Note:</strong> If you user zsh in=
stead of bash, replace <code>~/.bash_profile</code> in all the following sc=
ripts with <code>~/.zshrc</code>.</p>
<ol>
<li><p>To check if Homebrew is installed on your Mac, run the following com=
mand:</p></li>
</ol>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">brew do=
ctor</pre>=20
</div>
</div>
<p>2. To install Homebrew, run the following commands:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">xcode-s=
elect --install
curl -fsSL -o install.sh https://raw.githubusercontent.com/Homebrew/install=
/master/install.sh
/bin/bash install.sh
echo 'export PATH=3D"/usr/local/sbin:$PATH"' &gt;&gt; ~/.bash_profile
echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' &gt;&gt; ~/.bash_profile</=
pre>=20
</div>
</div>
<p>3. To install PyEnv, run the following command. If you already have PyEn=
v installed skip this step and go to step 2.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">brew in=
stall pyenv</pre>=20
</div>
</div>
<p>Please make sure the following code has been added to your shell profile=
 after installation, if <code>brew</code> failed to do so.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">export =
PYENV_ROOT=3D"$HOME/.pyenv"
export PATH=3D"$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"</pre>=20
</div>
</div>
<p>4. Exit your shell terminal session, and start a new one for the above s=
cript to take effect or run the following command instead:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">source =
~/.bash_profile</pre>=20
</div>
</div>
<h3 id=3D"DSOTool-UserGuide-AmazonLinuxUsers">Amazon Linux Users</h3>
<ol>
<li><p>Install prerequisites including git, gcc, openssl-devel, readline-de=
vel and zlib-devel. If you already have them installed, skip this step and =
go to step 2.</p></li>
</ol>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">sudo yu=
m groupinstall "Development Tools"
sudo yum install -y openssl-devel readline-devel zlib-devel</pre>=20
</div>
</div>
<p>2. To install PyEnv, run the following command. If you already have PyEn=
v installed skip this step and go to step 2.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">git clo=
ne https://github.com/pyenv/pyenv.git ~/.pyenv
echo 'export PYENV_ROOT=3D"$HOME/.pyenv"' &gt;&gt; ~/.bash_profile
echo 'export PATH=3D"$PYENV_ROOT/bin:$PATH"' &gt;&gt; ~/.bash_profile
echo -e 'if command -v pyenv 1&gt;/dev/null 2&gt;&amp;1; then\n  eval "$(py=
env init -)"\nfi' &gt;&gt; ~/.bash_profile</pre>=20
</div>
</div>
<h3 id=3D"DSOTool-UserGuide-WindowsUsers">Windows Users</h3>
<p>To-Do</p>
<h2 id=3D"DSOTool-UserGuide-InstallingPython">Installing Python</h2>
<ol>
<li><p>Having PyEnv installed, to install Python version 3.9.4 (recommended=
), run the following commands. </p></li>
</ol>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">pyenv i=
nstall 3.9.4</pre>=20
</div>
</div>
<p>2. Make sure the Python version has been installed successfully.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">pyenv v=
ersions</pre>=20
</div>
</div>
<p>3. Run the following command to make sure Python 3.9.4 is being used glo=
bally (machine-wide). </p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">pyenv g=
lobal 3.9.4
pyenv rehash</pre>=20
</div>
</div>
<p>4. To install PIP, run the following command. If you already have it ins=
talled, skip this step.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">curl ht=
tps://bootstrap.pypa.io/get-pip.py -o get-pip.py
python get-pip.py</pre>=20
</div>
</div>
<h2 id=3D"DSOTool-UserGuide-InstallingDSO">Installing DSO</h2>
<ol>
<li><p>Having installed Python version 3+ and PIP, to install the DSO tool,=
 run the following command:</p></li>
</ol>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">pip ins=
tall dsocli</pre>=20
</div>
</div>
<p>If the installation has been successful, running <code>dso</code> c=
ommand should return the following result:</p>
<span class=3D"confluence-embedded-file-wrapper image-left-wrapper confluen=
ce-embedded-manual-size"><img class=3D"confluence-embedded-image image-left=
" width=3D"442" loading=3D"lazy" src=3D"d9d98b8805fc72a8cf874bc4622bb7dd" d=
ata-image-src=3D"https://bettercaring.atlassian.net/wiki/download/attachmen=
ts/1749647365/image-20210706-052500.png?version=3D1&amp;modificationDate=3D=
1625549101722&amp;cacheVersion=3D1&amp;api=3Dv2" data-height=3D"280" data-w=
idth=3D"434" data-unresolved-comment-count=3D"0" data-linked-resource-id=3D=
"1788674165" data-linked-resource-version=3D"1" data-linked-resource-type=
=3D"attachment" data-linked-resource-default-alias=3D"image-20210706-052500=
.png" data-base-url=3D"https://bettercaring.atlassian.net/wiki" data-linked=
-resource-content-type=3D"image/png" data-linked-resource-container-id=3D"1=
749647365" data-linked-resource-container-version=3D"34" data-media-id=3D"5=
3ccd60d-e15f-46cf-bfd1-57a468b6993c" data-media-type=3D"file" height=3D"284=
"></span>
<h1 id=3D"DSOTool-UserGuide-DSOCLIUpgrading">DSO CLI Upgrading</h1>
<p>If you have already installed DSO CLI, you can upgrade it to the latest =
version at any time using the following command:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">pip ins=
tall dsocli --upgrade</pre>=20
</div>
</div>
<p>To check the version, run the following command:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o version</pre>=20
</div>
</div>
<h1 id=3D"DSOTool-UserGuide-ConfigurationManagement">Configuration Man=
agement</h1>
<h2 id=3D"DSOTool-UserGuide-Contexts">Contexts</h2>
<p>Every DSO application must belong to a project. Projects are logical ent=
ities that DSO uses to manage applications groups. DSO does not allow appli=
cations without projects. The combination of a project, an application, and=
 a stage (e.g. dev, test, uat, stg, prod) specify a <em>context</em>, where=
 DSO resources such as parameters, secrets and templates can be added to. C=
ontexts follow a hierarchy scope and resource sharing model, that can be us=
ed by DSO applications. These scopes are as follows:</p>
<ol>
<li><p><strong>Global:</strong> That is shared between all the applications=
. For example all the application may need to use the same NewRelic account=
.</p></li>
<li><p><strong>Global stage:</strong> That is shared between all the applic=
ations in a specific stage. For example, it may be desirable for all the ap=
plication in the =E2=80=98uat=E2=80=99 stage to have a log retention policy=
 of only 7 days.</p></li>
<li><p><strong>Project: </strong>That is shared between all the application=
 belonging to a specific project. For example all the application in =E2=80=
=98backend=E2=80=99 project may be needed to log to the same log group.</p>=
</li>
<li><p><strong>Project stage:</strong> That is shared between all the appli=
cation belonging to a specific project in a specific stage. For example, al=
l the application in =E2=80=98backend=E2=80=99 project may be needed to use=
 the same Mailgun key when they are in =E2=80=98dev=E2=80=99 stage.</p></li=
>
<li><p><strong>Application: </strong>That is shared between all the stages =
of an application. For example the =E2=80=98api=E2=80=99 application may be=
 needed to use the same log group in all stages.</p></li>
<li><p><strong>Application stage:</strong> That is limited to a specific sa=
ge of an application. For example, =E2=80=98api=E2=80=99 application in =E2=
=80=98prod=E2=80=99 stage may have its own database host, or password.</p><=
/li>
</ol>
<p>The aforementioned hierarchy can be seen in the following picture: </p>
<span class=3D"confluence-embedded-file-wrapper image-left-wrapper confluen=
ce-embedded-manual-size"><img class=3D"confluence-embedded-image image-left=
" width=3D"442" loading=3D"lazy" src=3D"6d9b5efa91fd9974e39048d01f4f812b" d=
ata-image-src=3D"https://bettercaring.atlassian.net/wiki/download/attachmen=
ts/1749647365/image-20210624-003654.png?version=3D1&amp;modificationDate=3D=
1624495017011&amp;cacheVersion=3D1&amp;api=3Dv2" data-height=3D"285" data-w=
idth=3D"490" data-unresolved-comment-count=3D"0" data-linked-resource-id=3D=
"1748959294" data-linked-resource-version=3D"1" data-linked-resource-type=
=3D"attachment" data-linked-resource-default-alias=3D"image-20210624-003654=
.png" data-base-url=3D"https://bettercaring.atlassian.net/wiki" data-linked=
-resource-content-type=3D"image/png" data-linked-resource-container-id=3D"1=
749647365" data-linked-resource-container-version=3D"34" data-media-id=3D"9=
d080fcb-6d34-412e-aeaa-3f9919512fb1" data-media-type=3D"file" height=3D"256=
"></span>
<p>Every scope by default inherit all the resources (parameters, secrets, a=
nd templates) from its parent scope in the hierarchy. It may however overri=
de them and make them more specific for its own.</p>
<p><strong>Tip: </strong>Even though DSO allows templates to be defined in =
stage scopes, it is recommended not to do so. As a best practices, instance=
s of a DSO application in different stages should share the same template s=
ets, and differ only in parameters and secret values.</p>
<p><strong>Tip: </strong>Every stage may also have up to 9 environments tha=
t are numbered from 1 to 9. The child environments inherit all the resource=
s from the default environment, which is numbered 0. For example, =E2=80=98=
prod=E2=80=99 stage actually refers to =E2=80=98prod/0=E2=80=99, which is t=
he default environment (0) in the =E2=80=98prod=E2=80=99 stage. You may hav=
e child environments as =E2=80=98prod/1=E2=80=99 or =E2=80=98prod/2=E2=80=
=99 that by default inherit all the resources from =E2=80=98prod/0=E2=80=99=
 but may override some parameters or secrets.</p>
<h2 id=3D"DSOTool-UserGuide-Configuringapplications">Configuring appli=
cations</h2>
<p>In order to use DSO to manage the configuration of an application, it ne=
eds to be set up first. </p>
<ol>
<li><p>The first step is to initialise the working directory. Navigate to t=
he root of the application directory, and run the following command to init=
ialise the DSO application:</p></li>
</ol>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o config init</pre>=20
</div>
</div>
<p>This will initialise the working directory with the default DSO configur=
ation. To see the DSO configuration, run the following command:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o config get</pre>=20
</div>
</div>
<p>The output should be similar to this:</p>
<span class=3D"confluence-embedded-file-wrapper image-left-wrapper confluen=
ce-embedded-manual-size"><img class=3D"confluence-embedded-image image-left=
" width=3D"442" loading=3D"lazy" src=3D"838b990a96bcc8cc537ee1704aa95f64" d=
ata-image-src=3D"https://bettercaring.atlassian.net/wiki/download/attachmen=
ts/1749647365/image-20210706-052625.png?version=3D1&amp;modificationDate=3D=
1625549187654&amp;cacheVersion=3D1&amp;api=3Dv2" data-height=3D"310" data-w=
idth=3D"487" data-unresolved-comment-count=3D"0" data-linked-resource-id=3D=
"1788969078" data-linked-resource-version=3D"1" data-linked-resource-type=
=3D"attachment" data-linked-resource-default-alias=3D"image-20210706-052625=
.png" data-base-url=3D"https://bettercaring.atlassian.net/wiki" data-linked=
-resource-content-type=3D"image/png" data-linked-resource-container-id=3D"1=
749647365" data-linked-resource-container-version=3D"34" data-media-id=3D"e=
1a96c21-3cbc-4689-bfba-085ce9ca1f36" data-media-type=3D"file" height=3D"281=
"></span>
<p></p>
<p>The next steps are to specify the application name, and the project that=
 it belongs to.</p>
<p>2. To set the project name to for example =E2=80=98backend=E2=80=99 , ru=
n the following command:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o config set project backend </pre>=20
</div>
</div>
<p>3. To set the application name to for example =E2=80=98api=E2=80=99 , ru=
n the following command:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o config set application api </pre>=20
</div>
</div>
<p>This will set a context for the DSO application to target when running c=
ommands from the working directory. The stage will be specified using <code=
>--stage</code> option when running the DSO commands.</p>
<p>The next step is to set up the providers for the application to manage p=
arameters, secrets and templates. Currently DSO supports the following prov=
iders:</p>
<ul>
<li><p>Parameter Providers:</p>
<ul>
<li><p>AWS SSM: Uses the AWS SecretManager ParameterStore as the backend st=
ore to manage parameters. The provider supports versioning and rollbacks. T=
he identifier of this provider is <code>aws/ssm/v1</code>.</p></li>
<li><p>Local: Use the local file system to manage parameters. This provider=
 does not support versioning and rollbacks. It may however achieved via Git=
 on the local file system. The identifier of this provider is <code>local/v=
1</code>.</p></li>
</ul></li>
<li><p>Secret Providers:</p>
<ul>
<li><p>AWS SSM: Uses the AWS SecretManager ParameterStore as the backend st=
ore to manage secrets. The provider supports versioning and rollbacks. The =
identifier of this provider is <code>aws/ssm/v1</code>.</p></li>
</ul></li>
<li><p>Template Providers:</p>
<ul>
<li><p>Local: Use the local file system to manage templates. This provider =
does not support versioning and rollbacks. It may however achieved via Git =
on the local file system. The identifier of this provider is <code>local/v1=
</code>.</p></li>
<li><p>AWS SSM: Uses the AWS SecretManager ParameterStore as the backend st=
ore to manage templates up to 4KB of size. The provider supports versioning=
 and rollbacks. The identifier of this provider is <code>aws/ssm/v1</code>.=
</p></li>
</ul></li>
</ul>
<p>4. To use the AWS SSM parameter provider, run the following command:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o config set parameter.provider.id aws/ssm/v1</pre>=20
</div>
</div>
<p>5. To use the AWS SSM secret provider, run the following command:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o config set secret.provider.id aws/ssm/v1</pre>=20
</div>
</div>
<p><strong>Note</strong><em><strong>:</strong></em> Make sure the AWS regio=
n has been already setup for the default profile on the machine where the c=
ommand is running, or an error will be returned when using AWS SSM paramete=
r or secret provider. To find out, run the following command:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">aws con=
figure get region</pre>=20
</div>
</div>
<p>You can also use the following command to set it for example to =E2=80=
=98ap-southeast-2=E2=80=99:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">aws con=
figure set region ap-southeast-2</pre>=20
</div>
</div>
<p>6. To use the local template provider, run the following command:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o config set template.provider.id local/v1</pre>=20
</div>
</div>
<p><strong>Tip: </strong>It is also possible to prepare a Yaml file and set=
 up the DSO configuration at once as follows:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">cat &lt=
;&lt;EOF | dso config init --input -
project: backend
application: api
parameter:
  provider:
    id: aws/ssm/v1
secret:
  provider:
    id: aws/ssm/v1
template:
  provider:
    id: local/v1
EOF</pre>=20
</div>
</div>
<p>In order to see the current DSO configuration that we have set up so far=
, run the following command:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o config get</pre>=20
</div>
</div>
<p>The output must be similar to the following image:</p>
<span class=3D"confluence-embedded-file-wrapper image-left-wrapper confluen=
ce-embedded-manual-size"><img class=3D"confluence-embedded-image image-left=
" width=3D"442" loading=3D"lazy" src=3D"e0f6a9b5b7455d99ec05d4395cd38bdb" d=
ata-image-src=3D"https://bettercaring.atlassian.net/wiki/download/attachmen=
ts/1749647365/image-20210706-052822.png?version=3D1&amp;modificationDate=3D=
1625549305071&amp;cacheVersion=3D1&amp;api=3Dv2" data-height=3D"303" data-w=
idth=3D"458" data-unresolved-comment-count=3D"0" data-linked-resource-id=3D=
"1785168230" data-linked-resource-version=3D"1" data-linked-resource-type=
=3D"attachment" data-linked-resource-default-alias=3D"image-20210706-052822=
.png" data-base-url=3D"https://bettercaring.atlassian.net/wiki" data-linked=
-resource-content-type=3D"image/png" data-linked-resource-container-id=3D"1=
749647365" data-linked-resource-container-version=3D"34" data-media-id=3D"6=
a14540d-797d-499e-9942-deaadf973646" data-media-type=3D"file" height=3D"292=
"></span>
<p><strong>Tip:</strong> If an invalid configuration key is added, you may =
delete is using the following command:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o config delete &lt;flattened.invalid.confgiuration.key&gt;</pre>=20
</div>
</div>
<p><strong>Tip: </strong>You may also pipe the result of a command to anoth=
er one. The following example set the same provider for secrets as the one =
that has been set for the parameters:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o config get parameter.provider.id | dso config add secret.provider.id --in=
put - </pre>=20
</div>
</div>
<p></p>
<p><strong>Note:</strong> DSO application configurations also follow a hier=
archy model, which is based on the file system. For example you may configu=
re some configuration that should be used for all the projects (providers s=
ettings for example) inside your home directory, and then configure the DSO=
 configuration for each application in their own directories.</p>
<h2 id=3D"DSOTool-UserGuide-ManagingParameters">Managing Parameters</h=
2>
<h3 id=3D"DSOTool-UserGuide-Addingparameters">Adding parameters</h3>
<p>The following command may be used to add a parameter to a context, or up=
date its value if it is already existing in the context. This will override=
 the parameter in the given context if it is inherited from the parent cont=
exts. Multiple parameters may also be added at once using the <code>--input=
</code> option. The command returns a report of succeeded/failed attempts i=
n json format.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o parameter add KEY VALUE [OPTIONS]</pre>=20
</div>
</div>
<p style=3D"margin-left: 30.0px;">KEY: The identifier of the parameter to b=
e added. It may also be provided using the <code>--key</code> option. Param=
eter keys must conform to <code>^[a-zA-Z][.a-zA-Z0-9_-]*[a-zA-Z0-9]$</code>=
 regex pattern.</p>
<p style=3D"margin-left: 30.0px;"> <em>Required: </em>Yes, if the parameter=
 key(s) is not provided via <code>KEY</code> nor <code>--input</code>.</p>
<p style=3D"margin-left: 60.0px;"><strong>Note: </strong>You can use dots (=
<code>.</code>) to create namespaces for better readability and management =
of parameters. However, you may not use an existing namespace as the key fo=
r a new parameter in the same context. For example, if you have added param=
eter <code>Organisation.Name</code> to the global context, you may no longe=
r use <code>Organisation</code> for a new parameter key in the global conte=
xt, because it is a namespace used by a parameter. You may however use it i=
n the descendent contexts, which is called <em>overwriting</em> (and is not=
 recommended), as opposed to <em>overriding</em> when the same parameter ke=
y <code>Organisation.Name</code> is added to the descendent contexts.</p>
<p style=3D"margin-left: 30.0px;">VALUE: The value for the parameter. If th=
e parameter is already existing in the context, the value will be updated t=
o the new one. It may also be provided using the <code>--value</code> optio=
n.</p>
<p style=3D"margin-left: 30.0px;"> <em>Required: </em>Yes if <code>--input<=
/code> is not used.</p>
<p style=3D"margin-left: 30.0px;">OPTIONS:</p>
<p style=3D"margin-left: 60.0px;"><code>-k, --key &lt;key&gt;</code> </p>
<p style=3D"margin-left: 90.0px;">The key of the parameter. See <code>KEY</=
code> argument for more details.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>Yes, if the parameter=
 key(s) is not provided via <code>KEY</code> nor <code>--input</code>.</p>
<p style=3D"margin-left: 60.0px;"><code>-v, --value &lt;value&gt;</code></p=
>
<p style=3D"margin-left: 90.0px;">The value for the parameter. See <code>VA=
LUE</code> argument for more details.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>Yes if <code>--input</=
code> is not used.</p>
<p style=3D"margin-left: 60.0px;"><code>-s, --stage &lt;name&gt;[/&lt;numbe=
r&gt;]</code></p>
<p style=3D"margin-left: 90.0px;">Target a specific stage using the stage i=
dentifier, which is combination of a name and an optional number, where nam=
e must conform to <code>^([a-zA-Z][a-zA-Z0-9]+)$</code> regex pattern. If n=
o <code>/&lt;number&gt;</code> is specified, the default environment (<code=
>/0</code>) in the given stage will be targeted.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-i, --input &lt;path&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) file defining the param=
eters keys and values. Use <code>-</code> to read from the shell pipe or st=
din. By default, the content of the input file must be of the <code>json</c=
ode> format and conform to the same schema as that is generated by <code>ds=
o parameter list</code> command. Use <code>--format</code> however to chang=
e it if the input file is in other formats such as <code>shell</code> or <c=
ode>yaml</code>.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-f, --format [json|yaml|raw|csv|she=
ll]</code></p>
<p style=3D"margin-left: 90.0px;">Specify the data format of the input file=
. The default is <code>json</code>. This option can be used only when the <=
code>--input</code> option is provided.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-b, --verbosity &lt;number&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Specify the logging verbosity, where 0 is=
 for logging critical fatal errors only, 1 also logs error messages, 2 also=
 logs warnings, 3 also logs information messages, 4 also logs debug message=
s, and finally 5 logs everything. The default log level is 2 (warnings).</p=
>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--namespace &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the namespace set in the DSO con=
figuration. By default, all DSO applications use <code>default</code> names=
pace. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No<br><em>Default: </e=
m>default</p>
<p style=3D"margin-left: 60.0px;"><code>--project &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the project set in the DSO confi=
guration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--application &lt;name&gt;</code></=
p>
<p style=3D"margin-left: 90.0px;">Override the application set in the DSO c=
onfiguration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--scope</code></p>
<p style=3D"margin-left: 90.0px;">Change the scope for the executing comman=
d. Options <code>--global-scope</code> and <code>--namespace-scope</code> can=
 also be used for this purpose. It can be combined with <code>--uninherited=
</code> option to limit the context to the scope owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em><br><em>Default: </e=
m>Application<br><em>Allowed Values: </em>Application | Project | Global</p=
>
<p style=3D"margin-left: 60.0px;"><code>--global-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
global scope. It can be combined with <code>--uninherited</code> option to =
limit the context to the global resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em></p>
<p style=3D"margin-left: 60.0px;"><code>--namespace-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
project scope. It can be combined with <code>--uninherited</code> option to=
 limit the context to the projects owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--config&lt;key&gt;=3D&lt=
;value&gt;,...</code></p>
<p style=3D"margin-left: 90.0px;">Comma separated list of key/value pairs t=
o temporarily override the current DSO application configurations. It takes=
 effect only while executing the command and does not have any lasting effe=
ct on the DSO application configuration or subsequent command executions.</=
p>
<p style=3D"margin-left: 90.0px;">For example, you may temporarily use a di=
fferent parameter provider, let=E2=80=99s say <code>local/v1</code> without=
 editing the current DSO application configuration (using <code>dso config<=
/code> command). To achieve this one can use <code>--configparame=
ter.provider.id=3Dlocal/v1</code>.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-w, --working-dir &lt;path&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) directory where the DSO=
 application configuration resides. The current working directory will be u=
sed by default. </p>
<p style=3D"margin-left: 90.0px;">This is useful when the DSO CLI command i=
s executing from another directory than the application root, and allows yo=
u to execute the DSO CLI command from any directory without changing the wo=
rking directory to the application root.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-h, --help</code></p>
<p style=3D"margin-left: 90.0px;">Print a quick inline documentation of the=
 command, its arguments, and options.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<h3 id=3D"DSOTool-UserGuide-Deletingparameters">Deleting parameters</h=
3>
<p>The following command may be used to delete a parameter from a context. =
Note that the inherited parameters cannot be deleted. In other words, the c=
ontext must be the owner of the parameter or a =E2=80=9CNot Found=E2=80=9D =
error will be returned. Multiple parameters may also be deleted at once usi=
ng the <code>--input</code> option. The command returns a report of succeed=
ed/failed attempts in json format.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o parameter delete KEY [OPTIONS]</pre>=20
</div>
</div>
<p style=3D"margin-left: 30.0px;">KEY: The identifier of the parameter to b=
e deleted. It may also be provided using the <code>--key</code> option. </p=
>
<p style=3D"margin-left: 30.0px;"> <em>Required: </em>Yes if <code>--input<=
/code> is not used.</p>
<p style=3D"margin-left: 30.0px;">OPTIONS:</p>
<p style=3D"margin-left: 60.0px;"><code>-k, --key &lt;key&gt;</code> </p>
<p style=3D"margin-left: 90.0px;">The key of the parameter. See <code>KEY</=
code> argument for more details.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>Yes, if the parameter=
 key(s) is not provided via <code>KEY</code> nor <code>--input</code>.</p>
<p style=3D"margin-left: 60.0px;"><code>-s, --stage &lt;name&gt;[/&lt;numbe=
r&gt;]</code></p>
<p style=3D"margin-left: 90.0px;">Target a specific stage using the stage i=
dentifier, which is combination of a name and an optional number, where nam=
e must conform to <code>^([a-zA-Z][a-zA-Z0-9]+)$</code> regex pattern. If n=
o <code>/&lt;number&gt;</code> is specified, the default environment (<code=
>/0</code>) in the given stage will be targeted.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-i, --input &lt;path&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) file defining the param=
eters. Use <code>-</code> to read from the shell pipe or stdin. By default,=
 the content of the input file must be of the <code>json</code> format and =
conform to the same schema as that is generated by <code>dso parameter list=
</code> command. Use <code>--format</code> however to change it if the inpu=
t file is in other formats such as <code>shell</code> or <code>yaml</code>.=
</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-f, --format [json|yaml|raw|csv|she=
ll]</code></p>
<p style=3D"margin-left: 90.0px;">Specify the data format of the input file=
. The default is <code>json</code>. This option can be used only when the <=
code>--input</code> option is provided.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-b, --verbosity &lt;number&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Specify the logging verbosity, where 0 is=
 for logging critical fatal errors only, 1 also logs error messages, 2 also=
 logs warnings, 3 also logs information messages, 4 also logs debug message=
s, and finally 5 logs everything. The default log level is 2 (warnings).</p=
>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--namespace &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the namespace set in the DSO con=
figuration. By default, all DSO applications use <code>default</code> names=
pace. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No<br><em>Default: </e=
m>default</p>
<p style=3D"margin-left: 60.0px;"><code>--project &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the project set in the DSO confi=
guration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--application &lt;name&gt;</code></=
p>
<p style=3D"margin-left: 90.0px;">Override the application set in the DSO c=
onfiguration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--scope</code></p>
<p style=3D"margin-left: 90.0px;">Change the scope for the executing comman=
d. Options <code>--global-scope</code> and <code>--namespace-scope</code> can=
 also be used for this purpose. It can be combined with <code>--uninherited=
</code> option to limit the context to the scope owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em><br><em>Default: </e=
m>Application<br><em>Allowed Values: </em>Application | Project | Global</p=
>
<p style=3D"margin-left: 60.0px;"><code>--global-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
global scope. It can be combined with <code>--uninherited</code> option to =
limit the context to the global resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em></p>
<p style=3D"margin-left: 60.0px;"><code>--namespace-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
project scope. It can be combined with <code>--uninherited</code> option to=
 limit the context to the projects owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--config&lt;key&gt;=3D&lt=
;value&gt;,...</code></p>
<p style=3D"margin-left: 90.0px;">Comma separated list of key/value pairs t=
o temporarily override the current DSO application configurations. It takes=
 effect only while executing the command and does not have any lasting effe=
ct on the DSO application configuration or subsequent command executions.</=
p>
<p style=3D"margin-left: 90.0px;">For example, you may temporarily use a di=
fferent parameter provider, let=E2=80=99s say <code>local/v1</code> without=
 editing the current DSO application configuration (using <code>dso config<=
/code> command). To achieve this one can use <code>--configparame=
ter.provider.id=3Dlocal/v1</code>.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-w, --working-dir &lt;path&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) directory where the DSO=
 application configuration resides. The current working directory will be u=
sed by default. </p>
<p style=3D"margin-left: 90.0px;">This is useful when the DSO CLI command i=
s executing from another directory than the application root, and allows yo=
u to execute the DSO CLI command from any directory without changing the wo=
rking directory to the application root directory.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-h, --help</code></p>
<p style=3D"margin-left: 90.0px;">Print a quick inline documentation of the=
 command, its arguments, and options.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<h3 id=3D"DSOTool-UserGuide-Listingparameters">Listing parameters</h3>
<p>The following command may be used to list all the parameters that are in=
herited to or owned/overridden by a context. To limit the list to only para=
meters that are owned/overridden by the context, use the <code>--uninherite=
d</code> option. By default, the command shows a limited set of fields only=
. You may however use the <code>--query-all</code> option to include all th=
e fields returned by the template provider in the output, or the <code>--qu=
ery</code> option to fully customise the output using the JMESPath query la=
nguage.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o parameter list [OPTIONS]</pre>=20
</div>
</div>
<p style=3D"margin-left: 30.0px;">OPTIONS:</p>
<p style=3D"margin-left: 60.0px;"><code>-s, --stage &lt;name&gt;[/&lt;numbe=
r&gt;]</code></p>
<p style=3D"margin-left: 90.0px;">Target a specific stage using the stage i=
dentifier, which is combination of a name and an optional number, where nam=
e must conform to <code>^([a-zA-Z][a-zA-Z0-9]+)$</code> regex pattern. If n=
o <code>/&lt;number&gt;</code> is specified, the default environment (<code=
>/0</code>) in the given stage will be targeted.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-u, --uninherited</code></p>
<p style=3D"margin-left: 90.0px;">Select non-inherited parameters only, tha=
t are owned or explicitly overridden in the context. </p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-a, --query-all</code></p>
<p style=3D"margin-left: 90.0px;">Include all the fields returned by the pa=
rameter provider in the output. By default only <code>Value</code> of the p=
arameter will be included in the output. The fields that are returned depen=
ds on the parameter provider in use. The <code>aws/ssm/v1</code> parameter =
provider, For example, returns <code>RevisionId</code>, <code>Key</code>, <=
code>Value</code>, <code>Date</code>, <code>User</code>, <code>Version</cod=
e>, and <code>Path</code> of the parameter.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-q, --query &lt;jmespath&gt;</code>=
</p>
<p style=3D"margin-left: 90.0px;">Use the JMESPath query language to custom=
ise the output. For example, the <code>aws/ssm/v1</code> parameter provider=
 returns the user who has added or made changes to parameters in the <code>=
User</code> field. One may use a JMESPath query to include the user along s=
ide the parameter key as follows <code>--query 'Parameters[*].{Key: Key, Us=
er: User}'</code>. In order to see all the fields available in the output r=
eturned by the used parameter provider, you can use the <code>--query-all</=
code> option.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-f, --format [json|yaml|raw|csv|she=
ll]</code></p>
<p style=3D"margin-left: 90.0px;">Specify the data format of the input file=
. The default is <code>json</code>. This option can be used only when the <=
code>--input</code> option is provided.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-b, --verbosity &lt;number&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Specify the logging verbosity, where 0 is=
 for logging critical fatal errors only, 1 also logs error messages, 2 also=
 logs warnings, 3 also logs information messages, 4 also logs debug message=
s, and finally 5 logs everything. The default log level is 2 (warnings).</p=
>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--namespace &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the namespace set in the DSO con=
figuration. By default, all DSO applications use <code>default</code> names=
pace. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No<br><em>Default: </e=
m>default</p>
<p style=3D"margin-left: 60.0px;"><code>--project &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the project set in the DSO confi=
guration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--application &lt;name&gt;</code></=
p>
<p style=3D"margin-left: 90.0px;">Override the application set in the DSO c=
onfiguration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--scope</code></p>
<p style=3D"margin-left: 90.0px;">Change the scope for the executing comman=
d. Options <code>--global-scope</code> and <code>--namespace-scope</code> can=
 also be used for this purpose. It can be combined with <code>--uninherited=
</code> option to limit the context to the scope owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em><br><em>Default: </e=
m>Application<br><em>Allowed Values: </em>Application | Project | Global</p=
>
<p style=3D"margin-left: 60.0px;"><code>--global-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
global scope. It can be combined with <code>--uninherited</code> option to =
limit the context to the global resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em></p>
<p style=3D"margin-left: 60.0px;"><code>--namespace-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
project scope. It can be combined with <code>--uninherited</code> option to=
 limit the context to the projects owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--config&lt;key&gt;=3D&lt=
;value&gt;,...</code></p>
<p style=3D"margin-left: 90.0px;">Comma separated list of key/value pairs t=
o temporarily override the current DSO application configurations. It takes=
 effect only while executing the command and does not have any lasting effe=
ct on the DSO application configuration or subsequent command executions.</=
p>
<p style=3D"margin-left: 90.0px;">For example, you may temporarily use a di=
fferent parameter provider, let=E2=80=99s say <code>local/v1</code> without=
 editing the current DSO application configuration (using <code>dso config<=
/code> command). To achieve this one can use <code>--configparame=
ter.provider.id=3Dlocal/v1</code>.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-w, --working-dir &lt;path&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) directory where the DSO=
 application configuration resides. The current working directory will be u=
sed by default if the option is not provided.</p>
<p style=3D"margin-left: 90.0px;">This is useful when the DSO CLI command i=
s executing from another directory than the application root, and allows yo=
u to execute the DSO CLI command from any directory without changing the wo=
rking directory to the application root.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-h, --help</code></p>
<p style=3D"margin-left: 90.0px;">Print a quick inline documentation of the=
 command, its arguments, and options.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<h3 id=3D"DSOTool-UserGuide-Gettingthevalueofaparameter">Getting the v=
alue of a parameter</h3>
<p>In order to get the value of a parameter, use the following command. The=
 parameter may be inherited from the parent contexts or owned by the given =
context. If the parameter provider supports versioning, it will return the =
latest version of the parameter. You may however get any other revisions us=
ing the <code>--revision </code> option. The output is in json format, and =
to get the raw value of the parameter you should change the output format t=
o <em>raw</em> using the <code>--format</code> option. By default, the comm=
and shows the value of the parameter only. You may however use the <code>--=
query-all</code> option to include all the fields returned by the parameter=
 provider in the output, or the <code>--query</code> option to fully custom=
ise the output using the JMESPath query language. </p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o parameter get KEY [OPTIONS]</pre>=20
</div>
</div>
<p style=3D"margin-left: 30.0px;">KEY: The identifier of the parameter. It =
may also be provided using the <code>--key</code> option.</p>
<p style=3D"margin-left: 30.0px;"> <em>Required: </em>Yes</p>
<p style=3D"margin-left: 30.0px;">OPTIONS:</p>
<p style=3D"margin-left: 60.0px;"><code>-k, --key &lt;key&gt;</code> </p>
<p style=3D"margin-left: 90.0px;">The key of the parameter. See <code>KEY</=
code> argument for more details.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>Yes, if the key is no=
t provided via <code>KEY</code> argument.</p>
<p style=3D"margin-left: 60.0px;"><code>-s, --stage &lt;name&gt;[/&lt;numbe=
r&gt;]</code></p>
<p style=3D"margin-left: 90.0px;">Target a specific stage using the stage i=
dentifier, which is combination of a name and an optional number, where nam=
e must conform to <code>^([a-zA-Z][a-zA-Z0-9]+)$</code> regex pattern. If n=
o <code>/&lt;number&gt;</code> is specified, the default environment (<code=
>/0</code>) in the given stage will be targeted.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--revision &lt;revision-id&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">The revision ID whose value to be fetched=
. If this option is not used, the latest revision will be selected. The for=
mat of the revision ID depends on the parameter provider in use. For exampl=
e with <code>aws/ssm/v1</code> parameter provider, the revision ID is the v=
ersion number of the revision.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--history</code></p>
<p style=3D"margin-left: 90.0px;">Return the history of all revisions of th=
e parameter. This option include only <code>RevisionId</code>, <code>Value<=
/code>, and <code>Date</code> in the output by default. To see all the deta=
ils of the revisions, combine with the <code>--query-all</code> option.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-a, --query-all</code></p>
<p style=3D"margin-left: 90.0px;">Include all the fields returned by the pa=
rameter provider in the output. By default only <code>Value</code> of the p=
arameter will be included in the output. The fields that are returned depen=
ds on the parameter provider in use. The <code>aws/ssm/v1</code> parameter =
provider, For example, returns <code>RevisionId</code>, <code>Key</code>, <=
code>Value</code>, <code>Date</code>, <code>User</code>, <code>Version</cod=
e>, and <code>Path</code> of the parameter.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-q, --query &lt;jmespath&gt;</code>=
</p>
<p style=3D"margin-left: 90.0px;">Use the JMESPath query language to custom=
ise the output. For example, the <code>aws/ssm/v1</code> parameter provider=
 returns the user who has added or made changes to parameters in the <code>=
User</code> field. One may use a JMESPath query to include the user along s=
ide the parameter key as follows <code>--query 'Parameters[*].{Key: Key, Us=
er: User}'</code>. In order to see all the fields available in the output r=
eturned by the used parameter provider, you can use the <code>--query-all</=
code> option.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-f, --format [json|yaml|raw|csv]</c=
ode></p>
<p style=3D"margin-left: 90.0px;">Specify the data format of the input file=
. The default is <code>json</code>. This option can be used only when the <=
code>--input</code> option is provided.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-b, --verbosity &lt;number&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Specify the logging verbosity, where 0 is=
 for logging critical fatal errors only, 1 also logs error messages, 2 also=
 logs warnings, 3 also logs information messages, 4 also logs debug message=
s, and finally 5 logs everything. The default log level is 2 (warnings).</p=
>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--namespace &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the namespace set in the DSO con=
figuration. By default, all DSO applications use <code>default</code> names=
pace. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No<br><em>Default: </e=
m>default</p>
<p style=3D"margin-left: 60.0px;"><code>--project &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the project set in the DSO confi=
guration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--application &lt;name&gt;</code></=
p>
<p style=3D"margin-left: 90.0px;">Override the application set in the DSO c=
onfiguration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--scope</code></p>
<p style=3D"margin-left: 90.0px;">Change the scope for the executing comman=
d. Options <code>--global-scope</code> and <code>--namespace-scope</code> can=
 also be used for this purpose. It can be combined with <code>--uninherited=
</code> option to limit the context to the scope owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em><br><em>Default: </e=
m>Application<br><em>Allowed Values: </em>Application | Project | Global</p=
>
<p style=3D"margin-left: 60.0px;"><code>--global-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
global scope. It can be combined with <code>--uninherited</code> option to =
limit the context to the global resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em></p>
<p style=3D"margin-left: 60.0px;"><code>--namespace-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
project scope. It can be combined with <code>--uninherited</code> option to=
 limit the context to the projects owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--config&lt;key&gt;=3D&lt=
;value&gt;,...</code></p>
<p style=3D"margin-left: 90.0px;">Comma separated list of key/value pairs t=
o temporarily override the current DSO application configurations. It takes=
 effect only while executing the command and does not have any lasting effe=
ct on the DSO application configuration or subsequent command executions.</=
p>
<p style=3D"margin-left: 90.0px;">For example, you may temporarily use a di=
fferent parameter provider, let=E2=80=99s say <code>local/v1</code> without=
 editing the current DSO application configuration (using <code>dso config<=
/code> command). To achieve this one can use <code>--configparame=
ter.provider.id=3Dlocal/v1</code>.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-w, --working-dir &lt;path&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) directory where the DSO=
 application configuration resides. The current working directory will be u=
sed by default. </p>
<p style=3D"margin-left: 90.0px;">This is useful when the DSO CLI command i=
s executing from another directory than the application root, and allows yo=
u to execute the DSO CLI command from any directory without changing the wo=
rking directory to the application root.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-h, --help</code></p>
<p style=3D"margin-left: 90.0px;">Print a quick inline documentation of the=
 command, its arguments, and options.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<h2 id=3D"DSOTool-UserGuide-ManagingSecrets">Managing Secrets</h2>
<h3 id=3D"DSOTool-UserGuide-Addingsecrets">Adding secrets</h3>
<p>The following command may be used to add a secret to a context, or updat=
e its value if it is already existing in the context. This will override th=
e secret in the given context if it is inherited from the parent contexts. =
Multiple secrets may also be added at once using the <code>--input</code> o=
ption. The command returns a report of succeeded/failed attempts in json fo=
rmat.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o secret add KEY [OPTIONS]</pre>=20
</div>
</div>
<p style=3D"margin-left: 30.0px;">KEY: The identifier of the secret to be a=
dded. It may also be provided using the <code>--key</code> option. Secret k=
eys must conform to <code>^[a-zA-Z][.a-zA-Z0-9_-]*[a-zA-Z0-9]$</code> regex=
 pattern.</p>
<p style=3D"margin-left: 30.0px;"> <em>Required: </em>Yes, if the parameter=
 key(s) is not provided via <code>KEY</code> nor <code>--input</code>.</p>
<p style=3D"margin-left: 60.0px;"><strong>Note: </strong>You can use dots (=
<code>.</code>) to create namespaces for better readability and management =
of parameters. However, you may not use an existing namespace as the key fo=
r a new parameter in the same context. For example, if you have added param=
eter <code>NewRelic.Key</code> to the global context, you may no longer use=
 <code>NewRelic</code> for a new parameter key in the global context, becau=
se it is a namespace used by a parameter. You may however use it in the des=
cendent contexts, which is called <em>overwriting</em> (and is not recommen=
ded), as opposed to <em>overriding</em> when the same parameter key <code>N=
ewRelic.Key</code> is added to the descendent contexts.</p>
<p style=3D"margin-left: 30.0px;">OPTIONS:</p>
<p style=3D"margin-left: 60.0px;"><code>-k, --key &lt;key&gt;</code> </p>
<p style=3D"margin-left: 90.0px;">The key of the secret. See <code>KEY</cod=
e> argument for more details.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>Yes if <code>--input</=
code> is not used.</p>
<p style=3D"margin-left: 60.0px;"><code>-s, --stage &lt;name&gt;[/&lt;numbe=
r&gt;]</code></p>
<p style=3D"margin-left: 90.0px;">Target a specific stage using the stage i=
dentifier, which is combination of a name and an optional number, where nam=
e must conform to <code>^([a-zA-Z][a-zA-Z0-9]+)$</code> regex pattern. If n=
o <code>/&lt;number&gt;</code> is specified, the default environment (<code=
>/0</code>) in the given stage will be targeted.</p>
<p style=3D"margin-left: 60.0px;"><code>-i, --input &lt;path&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) file defining the secre=
ts keys and values. Use <code>-</code> to read from the shell pipe or stdin=
. By default, the content of the input file must be of the <code>json</code=
> format and conform to the same schema as that is generated by <code>dso s=
ecret list</code> command. Use <code>--format</code> however to change it i=
f the input file is in other formats such as <code>shell</code> or <code>ya=
ml</code>.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-f, --format [json|yaml|raw|csv|she=
ll]</code></p>
<p style=3D"margin-left: 90.0px;">Specify the data format of the input file=
. The default is <code>json</code>. This option can be used only when the <=
code>--input</code> option is provided.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-b, --verbosity &lt;number&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Specify the logging verbosity, where 0 is=
 for logging critical fatal errors only, 1 also logs error messages, 2 also=
 logs warnings, 3 also logs information messages, 4 also logs debug message=
s, and finally 5 logs everything. The default log level is 2 (warnings).</p=
>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--namespace &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the namespace set in the DSO con=
figuration. By default, all DSO applications use <code>default</code> names=
pace. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No<br><em>Default: </e=
m>default</p>
<p style=3D"margin-left: 60.0px;"><code>--project &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the project set in the DSO confi=
guration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--application &lt;name&gt;</code></=
p>
<p style=3D"margin-left: 90.0px;">Override the application set in the DSO c=
onfiguration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--scope</code></p>
<p style=3D"margin-left: 90.0px;">Change the scope for the executing comman=
d. Options <code>--global-scope</code> and <code>--namespace-scope</code> can=
 also be used for this purpose. It can be combined with <code>--uninherited=
</code> option to limit the context to the scope owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em><br><em>Default: </e=
m>Application<br><em>Allowed Values: </em>Application | Project | Global</p=
>
<p style=3D"margin-left: 60.0px;"><code>--global-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
global scope. It can be combined with <code>--uninherited</code> option to =
limit the context to the global resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em></p>
<p style=3D"margin-left: 60.0px;"><code>--namespace-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
project scope. It can be combined with <code>--uninherited</code> option to=
 limit the context to the projects owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--config&lt;key&gt;=3D&lt=
;value&gt;,...</code></p>
<p style=3D"margin-left: 90.0px;">Comma separated list of key/value pairs t=
o temporarily override the current DSO application configurations. It takes=
 effect only while executing the command and does not have any lasting effe=
ct on the DSO application configuration or subsequent command executions.</=
p>
<p style=3D"margin-left: 90.0px;">For example, you may temporarily use a di=
fferent secret provider, let=E2=80=99s say <code>local/v1</code> without ed=
iting the current DSO application configuration (using <code>dso config</co=
de> command). To achieve this one can use <code>--configsecret.pr=
ovider.id=3Dlocal/v1</code>.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-w, --working-dir &lt;path&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) directory where the DSO=
 application configuration resides. The current working directory will be u=
sed by default. </p>
<p style=3D"margin-left: 90.0px;">This is useful when the DSO CLI command i=
s executing from another directory than the application root, and allows yo=
u to execute the DSO CLI command from any directory without changing the wo=
rking directory to the application root.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-h, --help</code></p>
<p style=3D"margin-left: 90.0px;">Print a quick inline documentation of the=
 command, its arguments, and options.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<h3 id=3D"DSOTool-UserGuide-Deletingsecrets">Deleting secrets</h3>
<p>The following command may be used to delete a secret from a context. Not=
e that the inherited secrets cannot be deleted. In other words, the context=
 must be the owner of the secret or a =E2=80=9CNot Found=E2=80=9D error wil=
l be returned. Multiple secrets may also be deleted at once using the <code=
>--input</code> option. The command returns a report of succeeded/failed at=
tempts in json format.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o secret delete KEY [OPTIONS]</pre>=20
</div>
</div>
<p style=3D"margin-left: 30.0px;">KEY: The identifier of the secret to be d=
eleted. It may also be provided using the <code>--key</code> option.</p>
<p style=3D"margin-left: 30.0px;"> <em>Required: </em>Yes if <code>--input<=
/code> is not used. </p>
<p style=3D"margin-left: 30.0px;">OPTIONS:</p>
<p style=3D"margin-left: 60.0px;"><code>-k, --key &lt;key&gt;</code> </p>
<p style=3D"margin-left: 90.0px;">The key of the secret. See <code>KEY</cod=
e> argument for more details.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>Yes, if the parameter=
 key(s) is not provided via <code>KEY</code> nor <code>--input</code>.</p>
<p style=3D"margin-left: 60.0px;"><code>-s, --stage &lt;name&gt;[/&lt;numbe=
r&gt;]</code></p>
<p style=3D"margin-left: 90.0px;">Target a specific stage using the stage i=
dentifier, which is combination of a name and an optional number, where nam=
e must conform to <code>^([a-zA-Z][a-zA-Z0-9]+)$</code> regex pattern. If n=
o <code>/&lt;number&gt;</code> is specified, the default environment (<code=
>/0</code>) in the given stage will be targeted.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-i, --input &lt;path&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) file defining the param=
eters. Use <code>-</code> to read from the shell pipe or stdin. By default,=
 the content of the input file must be of the <code>json</code> format and =
conform to the same schema as that is generated by <code>dso secret list</c=
ode> command. Use <code>--format</code> however to change it if the input f=
ile is in other formats such as <code>shell</code> or <code>yaml</code>.</p=
>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-f, --format [json|yaml|raw|csv|she=
ll]</code></p>
<p style=3D"margin-left: 90.0px;">Specify the data format of the input file=
. The default is <code>json</code>. This option can be used only when the <=
code>--input</code> option is provided.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-b, --verbosity &lt;number&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Specify the logging verbosity, where 0 is=
 for logging critical fatal errors only, 1 also logs error messages, 2 also=
 logs warnings, 3 also logs information messages, 4 also logs debug message=
s, and finally 5 logs everything. The default log level is 2 (warnings).</p=
>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--namespace &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the namespace set in the DSO con=
figuration. By default, all DSO applications use <code>default</code> names=
pace. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No<br><em>Default: </e=
m>default</p>
<p style=3D"margin-left: 60.0px;"><code>--project &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the project set in the DSO confi=
guration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--application &lt;name&gt;</code></=
p>
<p style=3D"margin-left: 90.0px;">Override the application set in the DSO c=
onfiguration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--scope</code></p>
<p style=3D"margin-left: 90.0px;">Change the scope for the executing comman=
d. Options <code>--global-scope</code> and <code>--namespace-scope</code> can=
 also be used for this purpose. It can be combined with <code>--uninherited=
</code> option to limit the context to the scope owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em><br><em>Default: </e=
m>Application<br><em>Allowed Values: </em>Application | Project | Global</p=
>
<p style=3D"margin-left: 60.0px;"><code>--global-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
global scope. It can be combined with <code>--uninherited</code> option to =
limit the context to the global resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em></p>
<p style=3D"margin-left: 60.0px;"><code>--namespace-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
project scope. It can be combined with <code>--uninherited</code> option to=
 limit the context to the projects owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--config&lt;key&gt;=3D&lt=
;value&gt;,...</code></p>
<p style=3D"margin-left: 90.0px;">Comma separated list of key/value pairs t=
o temporarily override the current DSO application configurations. It takes=
 effect only while executing the command and does not have any lasting effe=
ct on the DSO application configuration or subsequent command executions.</=
p>
<p style=3D"margin-left: 90.0px;">For example, you may temporarily use a di=
fferent secret provider, let=E2=80=99s say <code>local/v1</code> without ed=
iting the current DSO application configuration (using <code>dso config</co=
de> command). To achieve this one can use <code>--configsecret.pr=
ovider.id=3Dlocal/v1</code>.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-w, --working-dir &lt;path&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) directory where the DSO=
 application configuration resides. The current working directory will be u=
sed by default. </p>
<p style=3D"margin-left: 90.0px;">This is useful when the DSO CLI command i=
s executing from another directory than the application root, and allows yo=
u to execute the DSO CLI command from any directory without changing the wo=
rking directory to the application root directory.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-h, --help</code></p>
<p style=3D"margin-left: 90.0px;">Print a quick inline documentation of the=
 command, its arguments, and options.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<h3 id=3D"DSOTool-UserGuide-Listingsecrets">Listing secrets</h3>
<p>The following command may be used to list all the secrets that are inher=
ited to or owned/overridden by a context. To limit the list to only secrets=
 that are owned/overridden by the context, use the <code>--uninherited</cod=
e> option. By default, the command shows a limited set of fields only. You =
may however use the <code>--query-all</code> option to include all the fiel=
ds returned by the template provider in the output, or the <code>--query</c=
ode> option to fully customise the output using the JMESPath query language=
.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o secret list [OPTIONS]</pre>=20
</div>
</div>
<p style=3D"margin-left: 30.0px;">OPTIONS:</p>
<p style=3D"margin-left: 60.0px;"><code>-s, --stage &lt;name&gt;[/&lt;numbe=
r&gt;]</code></p>
<p style=3D"margin-left: 90.0px;">Target a specific stage using the stage i=
dentifier, which is combination of a name and an optional number, where nam=
e must conform to <code>^([a-zA-Z][a-zA-Z0-9]+)$</code> regex pattern. If n=
o <code>/&lt;number&gt;</code> is specified, the default environment (<code=
>/0</code>) in the given stage will be targeted.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-u, --uninherited</code></p>
<p style=3D"margin-left: 90.0px;">Select non-inherited secrets only, that a=
re owned or explicitly overridden by the context.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-d, --decrypt</code></p>
<p style=3D"margin-left: 90.0px;">Decrypt secret values. If this option is =
not provided, the encrypted values will be returned.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-a, --query-all</code></p>
<p style=3D"margin-left: 90.0px;">Include all the fields returned by the se=
cret provider in the output. By default only <code>Value</code> of the secr=
et will be included in the output. The fields that are returned depends on =
the secret provider in use. The <code>aws/ssm/v1</code> secret provider, Fo=
r example, returns <code>RevisionId</code>, <code>Key</code>, <code>Value</=
code>, <code>Date</code>, <code>User</code>, <code>Version</code>, and <cod=
e>Path</code> of the secret.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-q, --query &lt;jmespath&gt;</code>=
</p>
<p style=3D"margin-left: 90.0px;">Use the JMESPath query language to custom=
ise the output. For example, the <code>aws/ssm/v1</code> secret provider re=
turns the user who has added or made changes to secrets in the <code>User</=
code> field. One may use a JMESPath query to include the user along side th=
e secret key as follows <code>--query 'Secrets[*].{Key: Key, User: User}'</=
code>. In order to see all the fields available in the output returned by t=
he used secret provider, you can use the <code>--query-all</code> option.</=
p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-f, --format [json|yaml|raw|csv]</c=
ode></p>
<p style=3D"margin-left: 90.0px;">Specify the data format of the input file=
. The default is <code>json</code>. This option can be used only when the <=
code>--input</code> option is provided.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-b, --verbosity &lt;number&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Specify the logging verbosity, where 0 is=
 for logging critical fatal errors only, 1 also logs error messages, 2 also=
 logs warnings, 3 also logs information messages, 4 also logs debug message=
s, and finally 5 logs everything. The default log level is 2 (warnings).</p=
>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--namespace &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the namespace set in the DSO con=
figuration. By default, all DSO applications use <code>default</code> names=
pace. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No<br><em>Default: </e=
m>default</p>
<p style=3D"margin-left: 60.0px;"><code>--project &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the project set in the DSO confi=
guration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--application &lt;name&gt;</code></=
p>
<p style=3D"margin-left: 90.0px;">Override the application set in the DSO c=
onfiguration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--scope</code></p>
<p style=3D"margin-left: 90.0px;">Change the scope for the executing comman=
d. Options <code>--global-scope</code> and <code>--namespace-scope</code> can=
 also be used for this purpose. It can be combined with <code>--uninherited=
</code> option to limit the context to the scope owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em><br><em>Default: </e=
m>Application<br><em>Allowed Values: </em>Application | Project | Global</p=
>
<p style=3D"margin-left: 60.0px;"><code>--global-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
global scope. It can be combined with <code>--uninherited</code> option to =
limit the context to the global resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em></p>
<p style=3D"margin-left: 60.0px;"><code>--namespace-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
project scope. It can be combined with <code>--uninherited</code> option to=
 limit the context to the projects owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p><code>--config&lt;key&gt;=3D&lt;value&gt;,...</code></p>
<p style=3D"margin-left: 90.0px;">Comma separated list of key/value pairs t=
o temporarily override the current DSO application configurations. It takes=
 effect only while executing the command and does not have any lasting effe=
ct on the DSO application configuration or subsequent command executions.</=
p>
<p style=3D"margin-left: 90.0px;">For example, you may temporarily use a di=
fferent secret provider, let=E2=80=99s say <code>local/v1</code> without ed=
iting the current DSO application configuration (using <code>dso config</co=
de> command). To achieve this one can use <code>--configsecret.pr=
ovider.id=3Dlocal/v1</code>.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-w, --working-dir &lt;path&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) directory where the DSO=
 application configuration resides. The current working directory will be u=
sed by default. </p>
<p style=3D"margin-left: 90.0px;">This is useful when the DSO CLI command i=
s executing from another directory than the application root, and allows yo=
u to execute the DSO CLI command from any directory without changing the wo=
rking directory to the application root.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-h, --help</code></p>
<p style=3D"margin-left: 90.0px;">Print a quick inline documentation of the=
 command, its arguments, and options.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<h3 id=3D"DSOTool-UserGuide-Gettingthevalueofasecret">Getting the valu=
e of a secret</h3>
<p>In order to get the value of a secret, use the following command. The se=
cret may be inherited from the parent contexts or owned by the given contex=
t. The value will be automatically decrypted and is returned as plain text.=
 If the secret provider supports versioning, it will return the latest vers=
ion of the parameter. You may however get any other revisions using the <co=
de>--revision </code> option. The output is in json format, and to get the =
raw value of the secret you should change the output format to <em>raw</em>=
 using the <code>--format</code> option. By default, the command shows the =
value of the secret only. You may however use the <code>--query-all</code> =
option to include all the fields returned by the secret provider in the out=
put, or the <code>--query</code> option to fully customise the output using=
 the JMESPath query language. </p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o secret get KEY [OPTIONS]</pre>=20
</div>
</div>
<p style=3D"margin-left: 30.0px;">KEY: The identifier of the secret. It may=
 also be provided using the <code>--key</code> option. </p>
<p style=3D"margin-left: 30.0px;"> <em>Required: </em>Yes</p>
<p style=3D"margin-left: 30.0px;">OPTIONS:</p>
<p style=3D"margin-left: 60.0px;"><code>-k, --key &lt;key&gt;</code> </p>
<p style=3D"margin-left: 90.0px;">The key of the secret. See <code>KEY</cod=
e> argument for more details.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>Yes, if the key is no=
t provided via <code>KEY</code> argument.</p>
<p style=3D"margin-left: 60.0px;"><code>-s, --stage &lt;name&gt;[/&lt;numbe=
r&gt;]</code></p>
<p style=3D"margin-left: 90.0px;">Target a specific stage using the stage i=
dentifier, which is combination of a name and an optional number, where nam=
e must conform to <code>^([a-zA-Z][a-zA-Z0-9]+)$</code> regex pattern. If n=
o <code>/&lt;number&gt;</code> is specified, the default environment (<code=
>/0</code>) in the given stage will be targeted.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--revision &lt;revision-id&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">The revision ID whose value to be fetched=
. If this option is not used, the latest revision will be selected. The for=
mat of the revision ID depends on the secret provider in use. For example w=
ith <code>aws/ssm/v1</code> secret provider, the revision ID is the version=
 number of the revision.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--history</code></p>
<p style=3D"margin-left: 90.0px;">Return the history of all revisions of th=
e secret. This option include only <code>RevisionId</code>, <code>Value</co=
de>, and <code>Date</code> in the output by default. To see all the details=
 of the revisions, combine with the <code>--query-all</code> option.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-a, --query-all</code></p>
<p style=3D"margin-left: 90.0px;">Include all the fields returned by the se=
cret provider in the output. By default only <code>Value</code> of the secr=
et will be included in the output. The fields that are returned depends on =
the secret provider in use. The <code>aws/ssm/v1</code> secret provider, Fo=
r example, returns <code>RevisionId</code>, <code>Key</code>, <code>Value</=
code>, <code>Date</code>, <code>User</code>, <code>Version</code>, and <cod=
e>Path</code> of the secret.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-q, --query &lt;jmespath&gt;</code>=
</p>
<p style=3D"margin-left: 90.0px;">Use the JMESPath query language to custom=
ise the output. For example, the <code>aws/ssm/v1</code> secret provider re=
turns the user who has added or made changes to secrets in the <code>User</=
code> field. One may use a JMESPath query to include the user along side th=
e secret key as follows <code>--query 'Secrets[*].{Key: Key, User: User}'</=
code>. In order to see all the fields available in the output returned by t=
he used secret provider, you can use the <code>--query-all</code> option.</=
p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-f, --format [json|yaml|raw|csv]</c=
ode></p>
<p style=3D"margin-left: 90.0px;">Specify the data format of the input file=
. The default is <code>json</code>. This option can be used only when the <=
code>--input</code> option is provided.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-b, --verbosity &lt;number&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Specify the logging verbosity, where 0 is=
 for logging critical fatal errors only, 1 also logs error messages, 2 also=
 logs warnings, 3 also logs information messages, 4 also logs debug message=
s, and finally 5 logs everything. The default log level is 2 (warnings).</p=
>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--namespace &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the namespace set in the DSO con=
figuration. By default, all DSO applications use <code>default</code> names=
pace. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No<br><em>Default: </e=
m>default</p>
<p style=3D"margin-left: 60.0px;"><code>--project &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the project set in the DSO confi=
guration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--application &lt;name&gt;</code></=
p>
<p style=3D"margin-left: 90.0px;">Override the application set in the DSO c=
onfiguration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--scope</code></p>
<p style=3D"margin-left: 90.0px;">Change the scope for the executing comman=
d. Options <code>--global-scope</code> and <code>--namespace-scope</code> can=
 also be used for this purpose. It can be combined with <code>--uninherited=
</code> option to limit the context to the scope owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em><br><em>Default: </e=
m>Application<br><em>Allowed Values: </em>Application | Project | Global</p=
>
<p style=3D"margin-left: 60.0px;"><code>--global-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
global scope. It can be combined with <code>--uninherited</code> option to =
limit the context to the global resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em></p>
<p style=3D"margin-left: 60.0px;"><code>--namespace-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
project scope. It can be combined with <code>--uninherited</code> option to=
 limit the context to the projects owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p><code>--config&lt;key&gt;=3D&lt;value&gt;,...</code></p>
<p style=3D"margin-left: 90.0px;">Comma separated list of key/value pairs t=
o temporarily override the current DSO application configurations. It takes=
 effect only while executing the command and does not have any lasting effe=
ct on the DSO application configuration or subsequent command executions.</=
p>
<p style=3D"margin-left: 90.0px;">For example, you may temporarily use a di=
fferent secret provider, let=E2=80=99s say <code>local/v1</code> without ed=
iting the current DSO application configuration (using <code>dso config</co=
de> command). To achieve this one can use <code>--configsecret.pr=
ovider.id=3Dlocal/v1</code>.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-w, --working-dir &lt;path&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) directory where the DSO=
 application configuration resides. The current working directory will be u=
sed by default. </p>
<p style=3D"margin-left: 90.0px;">This is useful when the DSO CLI command i=
s executing from another directory than the application root, and allows yo=
u to execute the DSO CLI command from any directory without changing the wo=
rking directory to the application root.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-h, --help</code></p>
<p style=3D"margin-left: 90.0px;">Print a quick inline documentation of the=
 command, its arguments, and options.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<h2 id=3D"DSOTool-UserGuide-ManagingTemplates">Managing Templates</h2>
<h3 id=3D"DSOTool-UserGuide-Addingtemplates">Adding templates</h3>
<p>The following command may be used to add a template to a context, or upd=
ate its contents if it is already existing in the context. This will overri=
de the template in the given context if it is inherited from the parent con=
texts. The path to the file containing the contents is provided via the <co=
de>--input</code> option. Multiple templates may also be added at once from=
 a directory. The command returns a report of succeeded/failed attempts in =
json format.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o template add --input &lt;path&gt; [KEY] [OPTIONS]</pre>=20
</div>
</div>
<p style=3D"margin-left: 30.0px;">KEY: The identifier of the parameter to b=
e added. It may also be provided using the <code>--key</code> option. Templ=
ate keys must conform to <code>^[a-zA-Z][./a-zA-Z0-9_-]*[a-zA-Z0-9]$</code>=
 regex pattern. If no key is provided for the template, the filename of the=
 path provided for <code>--input</code> will be used as the template key. I=
f the path provided via <code>--input</code> is a directory, you may also u=
se <code>**</code> and <code>*</code> in the template key to be replaced wi=
th the sub-directories and filename parts of each file in the directory. Fo=
r example, <code>--input mydirectory/ --key 'app/**/*' --recursive</code> w=
ill recursively add all files in <code>mydirectory/</code> directory and pr=
epends <code>app/</code> to the sub-directories (<code>**</code>) and (<cod=
e>*</code>) and name of each file as the template key.</p>
<p style=3D"margin-left: 30.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><strong>Note: </strong>You can use dots (=
<code>.</code>) to create namespaces for better readability and management =
of templates. Similar to parameters and secrets, overwriting is not allowed=
 in the same context, but can be done in the descendent contexts, even thou=
gh it is not recommended.</p>
<p style=3D"margin-left: 30.0px;">OPTIONS:</p>
<p style=3D"margin-left: 60.0px;"><code>-k, --key &lt;key&gt;</code> </p>
<p style=3D"margin-left: 90.0px;">The key of the parameter. See <code>KEY</=
code> argument for more details.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-c, --contents &lt;path&gt;</code><=
/p>
<p style=3D"margin-left: 90.0px;">Path to a (local) file containing the con=
tents of the template. Use <code>-</code> to read from the shell pipe or st=
din. If the path is a directory, all the (text) files within the directory =
will be added. The <code>--recursive</code> option may also be used in this=
 case to recursively search the directory for the templates. </p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>Yes</p>
<p style=3D"margin-left: 60.0px;"><code>-r, --render-path &lt;path&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Specify the path where the rendered templ=
ate should be placed at. If this option is not used, the rendered template =
will be placed to a file with same as the template key in the application r=
oot directory. </p>
<p style=3D"margin-left: 90.0px;">You may use and <code>**</code> and <code=
>*</code> in the render path to be replaced with the sub-directories and fi=
lename of the template key. For example, <code>--key 'app/**/*' --render-pa=
th 'artifacts/**/*'</code> will prepend <code>artifacts/</code> to each tem=
plate key (including prepended <code>app/)</code> to construct the render p=
ath</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-s, --stage &lt;name&gt;[/&lt;numbe=
r&gt;]</code></p>
<p style=3D"margin-left: 90.0px;">Target a specific stage using the stage i=
dentifier, which is combination of a name and an optional number, where nam=
e must conform to <code>^([a-zA-Z][a-zA-Z0-9]+)$</code> regex pattern. If n=
o <code>/&lt;number&gt;</code> is specified, the default environment (<code=
>/0</code>) in the given stage will be targeted.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-i, --input &lt;path&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) file defining the secre=
ts keys and values. Use <code>-</code> to read from the shell pipe or stdin=
. By default, the content of the input file must be of the <code>json</code=
> format and conform to the same schema as that is generated by <code>dso s=
ecret list</code> command. Use <code>--format</code> however to change it i=
f the input file is in other formats such as <code>shell</code> or <code>ya=
ml</code>.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-f, --format [json|yaml|raw|csv|she=
ll]</code></p>
<p style=3D"margin-left: 90.0px;">Specify the data format of the input file=
. The default is <code>json</code>. This option can be used only when the <=
code>--input</code> option is provided.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-b, --verbosity &lt;number&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Specify the logging verbosity, where 0 is=
 for logging critical fatal errors only, 1 also logs error messages, 2 also=
 logs warnings, 3 also logs information messages, 4 also logs debug message=
s, and finally 5 logs everything. The default log level is 2 (warnings).</p=
>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--namespace &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the namespace set in the DSO con=
figuration. By default, all DSO applications use <code>default</code> names=
pace. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No<br><em>Default: </e=
m>default</p>
<p style=3D"margin-left: 60.0px;"><code>--project &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the project set in the DSO confi=
guration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--application &lt;name&gt;</code></=
p>
<p style=3D"margin-left: 90.0px;">Override the application set in the DSO c=
onfiguration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--scope</code></p>
<p style=3D"margin-left: 90.0px;">Change the scope for the executing comman=
d. Options <code>--global-scope</code> and <code>--namespace-scope</code> can=
 also be used for this purpose. It can be combined with <code>--uninherited=
</code> option to limit the context to the scope owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em><br><em>Default: </e=
m>Application<br><em>Allowed Values: </em>Application | Project | Global</p=
>
<p style=3D"margin-left: 60.0px;"><code>--global-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
global scope. It can be combined with <code>--uninherited</code> option to =
limit the context to the global resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em></p>
<p style=3D"margin-left: 60.0px;"><code>--namespace-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
project scope. It can be combined with <code>--uninherited</code> option to=
 limit the context to the projects owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--config&lt;key&gt;=3D&lt=
;value&gt;,...</code></p>
<p style=3D"margin-left: 90.0px;">Comma separated list of key/value pairs t=
o temporarily override the current DSO application configurations. It takes=
 effect only while executing the command and does not have any lasting effe=
ct on the DSO application configuration or subsequent command executions.</=
p>
<p style=3D"margin-left: 90.0px;">For example, you may temporarily use a di=
fferent template provider, let=E2=80=99s say <code>local/v1</code> without =
editing the current DSO application configuration (using <code>dso config</=
code> command). To achieve this one can use <code>--configtemplat=
e.provider.id=3Dlocal/v1</code>.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-w, --working-dir &lt;path&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) directory where the DSO=
 application configuration resides. The current working directory will be u=
sed by default. </p>
<p style=3D"margin-left: 90.0px;">This is useful when the DSO CLI command i=
s executing from another directory than the application root, and allows yo=
u to execute the DSO CLI command from any directory without changing the wo=
rking directory to the application root.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-h, --help</code></p>
<p style=3D"margin-left: 90.0px;">Print a quick inline documentation of the=
 command, its arguments, and options.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p></p>
<p><strong>Note: </strong>To comply with best practices, DSO by default dis=
allow adding templates to the stage scopes to encourage using the same temp=
late across different environments. To customise templates for different en=
vironments if needed, you can use Jinja2 template language to embed logics.=
 Below is an example:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">DSO Met=
a:
---------
Stage is {{ dso.stage }}
Parameter provider is {{ dso.config.parameter.provider.id }}
Secret provider is {{ dso.config.secret.provider.id }}
Template provider is {{ dso.config.template.provider.id }}

Template Logics:
------------------
{% if dso.stage =3D=3D "dev" %}
Hey, I am running in development environment!
{% elif dso.stage =3D=3D "stg" %}
Hey, I am running in staging environment!
{% elif dso.stage =3D=3D "prd" %}
Hey, I am running in production environment!
{% else %}
{% include 'templates/include-me' %}
{% endif %}</pre>=20
</div>
</div>
<p>You can also have loops in the templates. For more details please check =
out this page:&nbsp;<a class=3D"external-link" data-card-appearance=3D"inli=
ne" href=3D"https://ttl255.com/jinja2-tutorial-part-2-loops-and-conditional=
s/" rel=3D"nofollow">https://ttl255.com/jinja2-tutorial-part-2-loops-and-co=
nditionals/</a>.</p>
<p>If you however really need to add a template to a stage scope, run the D=
SO command with the following environment variable:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">DSO_ALL=
OW_STAGE_TEMPLATES=3DYes dso template add ...</pre>=20
</div>
</div>
<p>or export it to be applied for all the subsequent DSO command executions=
:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">export =
DSO_ALLOW_STAGE_TEMPLATES=3DYes</pre>=20
</div>
</div>
<h3 id=3D"DSOTool-UserGuide-Deletingtemplates">Deleting templates</h3>
<p>The following command may be used to delete a template from a context. N=
ote that the inherited parameters cannot be deleted. In other words, the co=
ntext must be the owner of the template or a =E2=80=9CNot Found=E2=80=9D er=
ror will be returned. Multiple templates may also be deleted at once using =
the <code>--input</code> option. The command returns a report of succeeded/=
failed attempts in json format.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o template delete KEY [OPTIONS]</pre>=20
</div>
</div>
<p style=3D"margin-left: 30.0px;">KEY: The identifier of the parameter to b=
e deleted. It may also be provided using the <code>--key</code> option. </p=
>
<p style=3D"margin-left: 30.0px;"> <em>Required: </em>Yes if <code>--input<=
/code> is not used.</p>
<p style=3D"margin-left: 30.0px;">OPTIONS:</p>
<p style=3D"margin-left: 60.0px;"><code>-k, --key &lt;key&gt;</code> </p>
<p style=3D"margin-left: 90.0px;">The key of the parameter. See <code>KEY</=
code> argument for more details.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>Yes, if the parameter=
 key(s) is not provided via <code>KEY</code> nor <code>--input</code>.</p>
<p style=3D"margin-left: 60.0px;"><code>-i, --input &lt;path&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) file specifying the key=
s of the template to be deleted. Use <code>-</code> to read from the shell =
pipe or stdin. By default, the content of the input file must be of the <co=
de>json</code> format and conform to the same schema as that is generated b=
y <code>dso template list</code> command. Use <code>--format</code> however=
 to change it if the input file is in other formats such as <code>yaml</cod=
e>.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-s, --stage &lt;name&gt;[/&lt;numbe=
r&gt;]</code></p>
<p style=3D"margin-left: 90.0px;">Target a specific stage using the stage i=
dentifier, which is combination of a name and an optional number, where nam=
e must conform to <code>^([a-zA-Z][a-zA-Z0-9]+)$</code> regex pattern. If n=
o <code>/&lt;number&gt;</code> is specified, the default environment (<code=
>/0</code>) in the given stage will be targeted.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-f, --format [json|yaml|raw|csv]</c=
ode></p>
<p style=3D"margin-left: 90.0px;">Specify the data format of the input file=
. The default is <code>json</code>. This option can be used only when the <=
code>--input</code> option is provided.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-b, --verbosity &lt;number&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Specify the logging verbosity, where 0 is=
 for logging critical fatal errors only, 1 also logs error messages, 2 also=
 logs warnings, 3 also logs information messages, 4 also logs debug message=
s, and finally 5 logs everything. The default log level is 2 (warnings).</p=
>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--namespace &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the namespace set in the DSO con=
figuration. By default, all DSO applications use <code>default</code> names=
pace. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No<br><em>Default: </e=
m>default</p>
<p style=3D"margin-left: 60.0px;"><code>--project &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the project set in the DSO confi=
guration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--application &lt;name&gt;</code></=
p>
<p style=3D"margin-left: 90.0px;">Override the application set in the DSO c=
onfiguration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--scope</code></p>
<p style=3D"margin-left: 90.0px;">Change the scope for the executing comman=
d. Options <code>--global-scope</code> and <code>--namespace-scope</code> can=
 also be used for this purpose. It can be combined with <code>--uninherited=
</code> option to limit the context to the scope owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em><br><em>Default: </e=
m>Application<br><em>Allowed Values: </em>Application | Project | Global</p=
>
<p style=3D"margin-left: 60.0px;"><code>--global-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
global scope. It can be combined with <code>--uninherited</code> option to =
limit the context to the global resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em></p>
<p style=3D"margin-left: 60.0px;"><code>--namespace-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
project scope. It can be combined with <code>--uninherited</code> option to=
 limit the context to the projects owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--config&lt;key&gt;=3D&lt=
;value&gt;,...</code></p>
<p style=3D"margin-left: 90.0px;">Comma separated list of key/value pairs t=
o temporarily override the current DSO application configurations. It takes=
 effect only while executing the command and does not have any lasting effe=
ct on the DSO application configuration or subsequent command executions.</=
p>
<p style=3D"margin-left: 90.0px;">For example, you may temporarily use a di=
fferent template provider, let=E2=80=99s say <code>local/v1</code> without =
editing the current DSO application configuration (using <code>dso config</=
code> command). To achieve this one can use <code>--configtemplat=
e.provider.id=3Dlocal/v1</code>.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-w, --working-dir &lt;path&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) directory where the DSO=
 application configuration resides. The current working directory will be u=
sed by default. </p>
<p style=3D"margin-left: 90.0px;">This is useful when the DSO CLI command i=
s executing from another directory than the application root, and allows yo=
u to execute the DSO CLI command from any directory without changing the wo=
rking directory to the application root directory.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-h, --help</code></p>
<p style=3D"margin-left: 90.0px;">Print a quick inline documentation of the=
 command, its arguments, and options.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<h3 id=3D"DSOTool-UserGuide-Listingtemplates">Listing templates</h3>
<p>The following command may be used to list all the templates that are inh=
erited to or owned/overridden by a context. To limit the list to only templ=
ates that are owned/overridden by the context, use the <code>--uninherited<=
/code> option. By default, the command shows a limited set of fields only. =
You may however use the <code>--query-all</code> option to include all the =
fields returned by the template provider in the output, or the <code>--quer=
y</code> option to fully customise the output using the JMESPath query lang=
uage.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o template list [OPTIONS]</pre>=20
</div>
</div>
<p style=3D"margin-left: 30.0px;">OPTIONS:</p>
<p style=3D"margin-left: 60.0px;"><code>-s, --stage &lt;name&gt;[/&lt;numbe=
r&gt;]</code></p>
<p style=3D"margin-left: 90.0px;">Target a specific stage using the stage i=
dentifier, which is combination of a name and an optional number, where nam=
e must conform to <code>^([a-zA-Z][a-zA-Z0-9]+)$</code> regex pattern. If n=
o <code>/&lt;number&gt;</code> is specified, the default environment (<code=
>/0</code>) in the given stage will be targeted.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-u, --uninherited</code></p>
<p style=3D"margin-left: 90.0px;">Select non-inherited parameters only, tha=
t are owned or explicitly overridden in the context. </p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-a, --query-all</code></p>
<p style=3D"margin-left: 90.0px;">Include all the fields returned by the te=
mplate provider in the output. By default only <code>Value</code> of the te=
mplate will be included in the output. The fields that are returned depends=
 on the template provider in use. The <code>aws/ssm/v1</code> template prov=
ider, For example, returns <code>RevisionId</code>, <code>Key</code>, <code=
>Value</code>, <code>Date</code>, <code>User</code>, <code>Version</code>, =
and <code>Path</code> of the template.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-q, --query &lt;jmespath&gt;</code>=
</p>
<p style=3D"margin-left: 90.0px;">Use the JMESPath query language to custom=
ise the output. For example, the <code>aws/ssm/v1</code> template provider =
returns the user who has added or made changes to templates in the <code>Us=
er</code> field. One may use a JMESPath query to include the user along sid=
e the template key as follows <code>--query 'Templates[*].{Key: Key, User: =
User}'</code>. In order to see all the fields available in the output retur=
ned by the used template provider, you can use the <code>--query-all</code>=
 option.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-f, --format [json|yaml|raw|csv]</c=
ode></p>
<p style=3D"margin-left: 90.0px;">Specify the data format of the input file=
. The default is <code>json</code>. This option can be used only when the <=
code>--input</code> option is provided.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-b, --verbosity &lt;number&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Specify the logging verbosity, where 0 is=
 for logging critical fatal errors only, 1 also logs error messages, 2 also=
 logs warnings, 3 also logs information messages, 4 also logs debug message=
s, and finally 5 logs everything. The default log level is 2 (warnings).</p=
>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--namespace &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the namespace set in the DSO con=
figuration. By default, all DSO applications use <code>default</code> names=
pace. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No<br><em>Default: </e=
m>default</p>
<p style=3D"margin-left: 60.0px;"><code>--project &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the project set in the DSO confi=
guration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--application &lt;name&gt;</code></=
p>
<p style=3D"margin-left: 90.0px;">Override the application set in the DSO c=
onfiguration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--scope</code></p>
<p style=3D"margin-left: 90.0px;">Change the scope for the executing comman=
d. Options <code>--global-scope</code> and <code>--namespace-scope</code> can=
 also be used for this purpose. It can be combined with <code>--uninherited=
</code> option to limit the context to the scope owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em><br><em>Default: </e=
m>Application<br><em>Allowed Values: </em>Application | Project | Global</p=
>
<p style=3D"margin-left: 60.0px;"><code>--global-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
global scope. It can be combined with <code>--uninherited</code> option to =
limit the context to the global resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em></p>
<p style=3D"margin-left: 60.0px;"><code>--namespace-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
project scope. It can be combined with <code>--uninherited</code> option to=
 limit the context to the projects owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--config&lt;key&gt;=3D&lt=
;value&gt;,...</code></p>
<p style=3D"margin-left: 90.0px;">Comma separated list of key/value pairs t=
o temporarily override the current DSO application configurations. It takes=
 effect only while executing the command and does not have any lasting effe=
ct on the DSO application configuration or subsequent command executions.</=
p>
<p style=3D"margin-left: 90.0px;">For example, you may temporarily use a di=
fferent template provider, let=E2=80=99s say <code>local/v1</code> without =
editing the current DSO application configuration (using <code>dso config</=
code> command). To achieve this one can use <code>--configtemplat=
e.provider.id=3Dlocal/v1</code>.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-w, --working-dir &lt;path&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) directory where the DSO=
 application configuration resides. The current working directory will be u=
sed by default if the option is not provided.</p>
<p style=3D"margin-left: 90.0px;">This is useful when the DSO CLI command i=
s executing from another directory than the application root, and allows yo=
u to execute the DSO CLI command from any directory without changing the wo=
rking directory to the application root.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-h, --help</code></p>
<p style=3D"margin-left: 90.0px;">Print a quick inline documentation of the=
 command, its arguments, and options.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<h3 id=3D"DSOTool-UserGuide-Gettingthecontentsofatemplate">Getting the=
 contents of a template</h3>
<p>In order to get the contents of a template, use the following command. T=
he template may be inherited from the parent contexts or owned by the given=
 context. If the template provider supports versioning, it will return the =
latest version of the template. You may however get any other revisions usi=
ng the <code>--revision</code> option. The output is in json format, and to=
 get the raw contents of the template you should change the output format t=
o <em>raw</em> using the <code>--format</code> option. By default, the comm=
and shows the value of the template only. You may however use the <code>--q=
uery-all</code> option to include all the fields returned by the template p=
rovider in the output, or the <code>--query</code> option to fully customis=
e the output using the JMESPath query language. </p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">ds=
o template get [KEY] [OPTIONS]</pre>=20
</div>
</div>
<p style=3D"margin-left: 30.0px;">KEY: The identifier of the template. It m=
ay also be provided using the <code>--key</code> option.</p>
<p style=3D"margin-left: 30.0px;"> <em>Required: </em>Yes</p>
<p style=3D"margin-left: 30.0px;">OPTIONS:</p>
<p style=3D"margin-left: 60.0px;"><code>-k, --key &lt;key&gt;</code> </p>
<p style=3D"margin-left: 90.0px;">The key of the template. See <code>KEY</c=
ode> argument for more details.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>Yes, if the key is no=
t provided via <code>KEY</code> argument.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-s, --stage &lt;name&gt;[/&lt;numbe=
r&gt;]</code></p>
<p style=3D"margin-left: 90.0px;">Target a specific stage using the stage i=
dentifier, which is combination of a name and an optional number, where nam=
e must conform to <code>^([a-zA-Z][a-zA-Z0-9]+)$</code> regex pattern. If n=
o <code>/&lt;number&gt;</code> is specified, the default environment (<code=
>/0</code>) in the given stage will be targeted.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--revision &lt;revision-id&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">The revision ID whose value to be fetched=
. If this option is not used, the latest revision will be selected. The for=
mat of the revision ID depends on the template provider in use. For example=
 with <code>aws/ssm/v1</code> template provider, the revision ID is the ver=
sion number of the revision.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--history</code></p>
<p style=3D"margin-left: 90.0px;">Return the history of all revisions of th=
e template. This option include only <code>RevisionId</code>, <code>Value</=
code>, and <code>Date</code> in the output by default. To see all the detai=
ls of the revisions, combine with the <code>--query-all</code> option.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-a, --query-all</code></p>
<p style=3D"margin-left: 90.0px;">Include all the fields returned by the te=
mplate provider in the output. By default only <code>Value</code> of the pa=
rameter will be included in the output. The fields that are returned depend=
s on the parameter provider in use. The <code>aws/ssm/v1</code> template pr=
ovider, For example, returns <code>RevisionId</code>, <code>Key</code>, <co=
de>Value</code>, <code>Date</code>, <code>User</code>, <code>Version</code>=
, and <code>Path</code> of the template.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-q, --query &lt;jmespath&gt;</code>=
</p>
<p style=3D"margin-left: 90.0px;">Use the JMESPath query language to custom=
ise the output. For example, the <code>aws/ssm/v1</code> template provider =
returns the user who has added or made changes to templates in the <code>Us=
er</code> field. One may use a JMESPath query to include the user along sid=
e the template key as follows <code>--query 'Templates[*].{Key: Key, User: =
User}'</code>. In order to see all the fields available in the output retur=
ned by the used template provider, you can use the <code>--query-all</code>=
 option.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-f, --format [json|yaml|raw|csv]</c=
ode></p>
<p style=3D"margin-left: 90.0px;">Specify the data format of the input file=
. The default is <code>json</code>. This option can be used only when the <=
code>--input</code> option is provided.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-b, --verbosity &lt;number&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Specify the logging verbosity, where 0 is=
 for logging critical fatal errors only, 1 also logs error messages, 2 also=
 logs warnings, 3 also logs information messages, 4 also logs debug message=
s, and finally 5 logs everything. The default log level is 2 (warnings).</p=
>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--namespace &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the namespace set in the DSO con=
figuration. By default, all DSO applications use <code>default</code> names=
pace. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No<br><em>Default: </e=
m>default</p>
<p style=3D"margin-left: 60.0px;"><code>--project &lt;name&gt;</code></p>
<p style=3D"margin-left: 90.0px;">Override the project set in the DSO confi=
guration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--application &lt;name&gt;</code></=
p>
<p style=3D"margin-left: 90.0px;">Override the application set in the DSO c=
onfiguration. This takes effect only for the executing command.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--scope</code></p>
<p style=3D"margin-left: 90.0px;">Change the scope for the executing comman=
d. Options <code>--global-scope</code> and <code>--namespace-scope</code> can=
 also be used for this purpose. It can be combined with <code>--uninherited=
</code> option to limit the context to the scope owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em><br><em>Default: </e=
m>Application<br><em>Allowed Values: </em>Application | Project | Global</p=
>
<p style=3D"margin-left: 60.0px;"><code>--global-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
global scope. It can be combined with <code>--uninherited</code> option to =
limit the context to the global resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: No</em></p>
<p style=3D"margin-left: 60.0px;"><code>--namespace-scope</code></p>
<p style=3D"margin-left: 90.0px;">Switch from the application scope to the =
project scope. It can be combined with <code>--uninherited</code> option to=
 limit the context to the projects owned resources only.</p>
<p style=3D"margin-left: 90.0px;"><em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>--config&lt;key&gt;=3D&lt=
;value&gt;,...</code></p>
<p style=3D"margin-left: 90.0px;">Comma separated list of key/value pairs t=
o temporarily override the current DSO application configurations. It takes=
 effect only while executing the command and does not have any lasting effe=
ct on the DSO application configuration or subsequent command executions.</=
p>
<p style=3D"margin-left: 90.0px;">For example, you may temporarily use a di=
fferent template provider, let=E2=80=99s say <code>local/v1</code> without =
editing the current DSO application configuration (using <code>dso config</=
code> command). To achieve this one can use <code>--configtemplat=
e.provider.id=3Dlocal/v1</code>.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-w, --working-dir &lt;path&gt;</cod=
e></p>
<p style=3D"margin-left: 90.0px;">Path to a (local) directory where the DSO=
 application configuration resides. The current working directory will be u=
sed by default. </p>
<p style=3D"margin-left: 90.0px;">This is useful when the DSO CLI command i=
s executing from another directory than the application root, and allows yo=
u to execute the DSO CLI command from any directory without changing the wo=
rking directory to the application root.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
<p style=3D"margin-left: 60.0px;"><code>-h, --help</code></p>
<p style=3D"margin-left: 90.0px;">Print a quick inline documentation of the=
 command, its arguments, and options.</p>
<p style=3D"margin-left: 90.0px;"> <em>Required: </em>No</p>
    </div>
</body>
</html>
------=_Part_24_127935698.1631772345682
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: file:///C:/6d9b5efa91fd9974e39048d01f4f812b

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
fn6cPXu26Fu/l3JluM6fP89atWqJyfhZKp6dnc379+8L56U1crCFnH9qaqpwqJpMJubm5rKwsJCv
vvoqX3vtNV6/fp0Gg4H169enWq0ulmd2djYTExOfkFuv1xczrPLfBw4coJ+fHwsLC3nv3j3q9XpR
J4PBUGodk5OThSNcpnXr1sWcpuTjyUk20NZ55OTkiEFbUg8FBQWl6k+e4GS2bdvG6tWr02Aw8N69
e8IZbC1nWloa7969W2Z+smwl61pUVCQmKuvrMnfv3mVmZqZIu3PnTg4cOJBk6U7e+/fv89GjRyQf
672oqIgWi4WFhYWiDFn+kuTm5vLOnTvifnZ2Ni0WC7t168aZM2eyoKCgWFvk5OTQy8uLZ8+e5aNH
j5icnCzktC7TZDKJtraWMy0trZgeU1NTi+Wfl5cn/k5PT2dOTg6NRuMTOrp//36pZcv5ygsM6z55
//59Pnz4sFQ9kBTPS5L0RF7Wn0siy1lSz6XpPTY2VrSVNbKcXbp04dSpU8V4kZHrZ21oZe7evSv0
KtfT2dlZBBaRj9v1zp07ot9ZEx8f/8SYNhgMTEpKosVi4ZQpU0TUbGnpY2JihJG3Ji0tTcgrRzjK
eRQUFPDQoUNcuHCheH779u10dnZmfn6+uJaZmcmYmJhSoxutiY2NLTZ+L168SE9PT6alpTE2Nlb0
q2cdvw8ePCimE4PBIPqzbJzJxwvgkv08NjZWzK9/lHJluE6dOkUfH59nMlylhVpah0+XTFtadJrM
4MGDxa7N3t6eAMRK3Ww2P1HO0yJlrKOY7O3tixmMstKVrIs8+ciRkTt27CDJJyYD6zQlO3hpA71k
mdaYTCZKksStW7fS09OzWFnWeZWli39HRyUp+axc9ubNm8WOrmRY/O8tq7TnrXXXrl07EQUpPytJ
EnNzc2lrayui956l3N+jq7La6/fot2ReJV8v+CM8az6lyW2dVtZ9eHg4X3755WL5P6suzGYzz5w5
wzp16rBq1aosKCigJElPjAn5c8m8SxsrkiRxxYoVTyw4yqpTaZRMI3++fPkyAbBt27YcNGgQ7ezs
uGjRIiHjs+RfUjfywuPChQvUaDTFFgnW9S4r77J08iz8kbFfFuXiZ034//6HhIQE7NixA5MnTxbO
4d96gY1WL0aW9rIqUPwFZvlzSbUcOnQIP/30EwCgYcOG6Nq1azFnbFnllJRR/pyYmIgzZ86gX79+
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
------=_Part_24_127935698.1631772345682
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: file:///C:/e0f6a9b5b7455d99ec05d4395cd38bdb

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
------=_Part_24_127935698.1631772345682
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: file:///C:/d9d98b8805fc72a8cf874bc4622bb7dd

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
siT9+/cna9asqr/37t2jf//+tGzZkpYtW5KYmMi6deuYMmUK5cqVo3nz5rRp00ZNN2VTg218w8LC
WLduHTVr1iRz5sy8ePGCJ0+eACkNccOGDdUrTrWFZo3/Vd7JCMHOzo7du3djNpupW7cugwcPZsuW
LQB06tSJRo0acfv2bcaNG6d+bL/++qs6ZWN7onfQoEH069eP1q1bc/LkSdq3b8/z58/ZtGkT9+7d
IyoqimXLliEizJw5U733tlu3bjRp0oSoqCg2bdqkTgMo12pWqFCBnTt3kpyczLlz52jVqhUtW7bE
arVy6NAhdSprwYIFqjbWP9IYKO8sXryYmzdvqg3TqVOn0Ol0nDlzhuHDh9O2bVuuXLnCF198wbNn
zwCYNGmSennLtWvXmDVrFgAdOnSgT58+fPzxx/zyyy989tln6s6qdevWcevWLcxmM02bNsXf358J
EybQrFkzevToQZMmTbh3756q0jmjOCUmJrJ582aKFy9Ojhw5aNiwodqDdnJyom3btpw5c4ZPP/1U
vdBn6dKlalopOoFiY2Np06YNXbp0ITQ0lOXLl7Nu3Tr0ej3Tp09HRFi2bBmXL1/G0dGRxMREYmJi
aNiwIR06dCBHjhycO3eOhw8fqqOzL7/8kkGDBlGyZEl1WmnMmDE8ePCAevXqkZCQwLJlywB49OiR
qhYdUEd5Fy9e5Pvvv+eDDz7Azs6OadOmsXLlSnUkGRMTw8OHD393fmto/H/jDy9AKAuSjRs3Vq/G
VMy/eY/3X3EW4m3Nu0yX+fPny5gxY8THx0cCAgJk3rx50rlz5z+Uh6tXr5ZWrVr9I3n4T5WVf3MZ
1Yxm/gnzp7adKlsWixQpQqlSpfjmm29e0SeU9qQo/LYOoMwR22KrWVNZ6FPc22rZtFgsau9OOZVq
q6nStiesnEy1DVdGmjoVf/7sfHJaf2z18hgMhlf2wFssllS3pSlxUubBbdNEmX/38vKic+fO+Pv7
q5fKL1y4UPX3dWmioORh27ZtuXjxInv37lXl2mpatQ2votdHsU+7LpE2bW3jl5ycrIZLcavkr+26
SVptq0o5st0AYFu2bLWaKuFPL0/ShiltmP8NerA0NP4p/t/rMtLQ0NDQeDveyRrCH9myZ9sj/P/Y
K0tvd9K7VtJmO3JQfv/RtEyrnTXt79/r1//nvH0dymjUdiSjofHfgjZC0Pif4s80dBoa/995Zw2C
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
------=_Part_24_127935698.1631772345682
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: file:///C:/838b990a96bcc8cc537ee1704aa95f64

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
Rx8B+cHpp556iqFDhxIaGoqPjw9Op5Ps7GzS09O5ePGirsWkPf/U1FT9ejVq1ODq1ausXr2atLQ0
PvnkE+655x5UVdWf+/79+0lPT8dms+F0OmnVqhWXLl1iz549mEwm8vLyWLp0KQ888AABAQEYDAZ+
/vlnjEajns8hkUjuXAo5CbPZzMGDB3nssceYOnUq/v7+enJbXl4eubm5XLx4Mf/k/59i0VY8aftA
ZGRkEB0djRACm82Gj49PIWmP65GVlUVUVBRCCLy8vPD09ERRFJKTk+nQoQN9+vThkUceoXfv3hw7
dkxfZQQQGBhIWloaQgh69OjBihUryM7ORlEUjEYjM2bM4NKlS4wcOZLNmzdjNBpxOBxuAn9+fn78
8ccfWCwWSpUqBeQ7RYPBoAsR/vHHH2RlZeFwONzuLysri/T0dL2DvXLlCpUrV3a7Py8vL2bMmMFv
v/3GiBEj2L17t756S5tK03CdltOev6Yi69rmoKAgUlNT3fai8PDwcFvC2r17dz766CO3DYu+/PJL
KlasyMCBA1m2bJn+bwtIRyGR3OEUiknYbDZycnL4/vvvmTt3Ll999RWtW7fGYDDoMYpevXoxb948
cnJyCAgI0Nfte3l5ERAQwLJly/jmm284d+4clStXJjw8XO906tevzyuvvMKjjz5a5GhC68wWLFjA
zJkzuXr1KnXr1qVs2bLk5ubyxhtvUKpUKb7//nvS0tLIyclh586dOBwOhgwZwtmzZ6lRowYjR46k
TJkyNGjQgAcffFDf0U0TIzQajTRs2JAnnniCqVOnkpmZSc2aNXn66afx8vKiSpUqvPDCC9x11110
7NiRpKQkHnjgAXbv3s2FCxdISEigZcuWVK9enW7durFu3TrOnz9PYmIi9913H9nZ2ezcuZMdO3Yw
ffp0FixYQEZGBkajkby8PGbOnImvry9ms5l77rmHhx56iD179gCQlJRESEgIQ4YMITMzk2nTpqGq
Ku3ataN69eo8++yzzJ07l/3793Po0CGmTJnCtm3b6NixI127dqVatWpucaCAgAAyMzO59957UVWV
zZs36w7dYDBw7tw5Ll26RPv27enXr5+bA9FUdyUSyZ2JnkyndfQRERFER0ezceNGnE4njz32GOvX
r+fq1as88sgj5Obm6vs1X758mdatW7N27VpycnJo1KgRp06d4vTp09SoUYPWrVuzZcsWhBDs2rWL
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
gg==
------=_Part_24_127935698.1631772345682--
