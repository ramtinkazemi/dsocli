trigger:
- master

pool:
  vmImage: 'macOS-10.15'

variables:
  - group: main

steps:

### --------------------------------------------------------------------------------
### Pre build
### --------------------------------------------------------------------------------

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: Install Node.js

# - script: |
#     npm install -g react-native-cli
#   displayName: Install react-native cli

### --------------------------------------------------------------------------------
### Build app
### --------------------------------------------------------------------------------


- script: |
    npm install
    # npm run build
  displayName: Run npm install/build


### --------------------------------------------------------------------------------
### Run test suits
### --------------------------------------------------------------------------------

# - script: |
#     npm run lint
#   displayName: Run lint

# - script: |
#     npm run test
#   displayName: Run unit tests


### --------------------------------------------------------------------------------
### Create iOS app
### --------------------------------------------------------------------------------

- task: CocoaPods@0
  displayName: Resolve iOS pods
  inputs:
    workingDirectory: ios
  
- task: Xcode@5
  displayName: Build iOS app
  inputs:
    actions: 'clean build analyze archive'
    sdk: iphoneos
    configuration: Release
    xcWorkspacePath: ios/reactnativetest.xcodeproj/project.xcworkspace
    useXcpretty: false
    args: '-archivePath $(agent.buildDirectory)/react-native-test'

- task: ArchiveFiles@2
  displayName: Package iOS app
  inputs:
    rootFolderOrFile: '$(agent.buildDirectory)/react-native-test.xcarchive/'
    archiveFile: '$(build.artifactStagingDirectory)/react-native-test.xcarchive.zip'

- task: PublishBuildArtifacts@1
  displayName: Publish iOS artifacts
  inputs:
    pathToPublish: '$(build.artifactStagingDirectory)/react-native-test.xcarchive.zip'
    artifactName: react-native-test
    artifactType: container

# - script: |
#     cd ios
#     bundle install
#     fastlane build
#   displayName: 'Build iOS'

# - task: InstallAppleCertificate@2
#   inputs:
#     certSecureFile: react-native-test-ios.p12
#     certPwd: $(AppleCertP12Password)
#     keychain: 'temp'
#     deleteCert: true
#   displayName: Install Apple Certificate

# - task: InstallAppleProvisioningProfile@1
#   inputs:
#     provisioningProfileLocation: 'secureFiles'
#     provProfileSecureFile: 'AppleProvisioningProfile.mobileprovision'
#   displayName: Install Apple Provisioning Profile

# - task: AppCenterDistribute@1
#   inputs:
#     serverEndpoint: 'appcenter'
#     appSlug: 'place your appSlug herer'
#     appFile: 'react-native-test-android.apk'
#     releaseNotesOption: 'input' # Options: input, file
#     releaseNotesInput: $(Build.SourceVersionMessage) # Required when releaseNotesOption == Input
#     distributionGroupId: 'place your distributionGroupId here'
#   displayName: Distribute Android app to AppCenter

### --------------------------------------------------------------------------------
### Create Android app
### --------------------------------------------------------------------------------

# - script: |
#     react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/build/intermediates/res/merged/release/
#   displayName: Bundle for Android

# - script: |
#     cd android
#     rm -rf android/app/build/intermediates/res/merged/release/drawable-*
#     ./gradlew clean
#     ./gradlew assembleRelease
#     cd ..
#   displayName: Create release for Android

- task: Gradle@2
  inputs:
    workingDirectory: 'android'
    gradleWrapperFile: 'android/gradlew'
    tasks: 'assembleRelease'
  continueOnError: false
  displayName: Build for Android


# - script: |
#     cd android
#     bundle install
#     fastlane build
#   displayName: 'Build android'

- script: 
    mv android/app/build/outputs/apk/release/app-release.apk react-native-test.apk
  continueOnError: false
  displayName: Android post-process

# - task: AndroidSigning@3
#   inputs:
#     apkFiles: 'react-native-test-android.apk'
#     apksign: true # Optional
#     apksignerKeystoreFile: 'my-release-key.keystore' # Required when apksign == True
#     apksignerKeystorePassword: $(KeystorePassword) # Optional
#     apksignerKeystoreAlias: $(KeystoreAlias) # Optional
#     apksignerKeyPassword: $(KeyPassword) # Optional
#     #apksignerArguments: '--verbose' # Optional
#     #apksignerFile: # Optional
#     #zipalign: true # Optional
#     #zipalignFile: # Optional


# - task: AppCenterDistribute@1
#   inputs:
#     serverEndpoint: 'appcenter'
#     appSlug: 'place your appSlug herer'
#     appFile: 'react-native-test-android.apk'
#     releaseNotesOption: 'input' # Options: input, file
#     releaseNotesInput: $(Build.SourceVersionMessage) # Required when releaseNotesOption == Input
#     distributionGroupId: 'place your distributionGroupId here'
#   displayName: Distribute Android app to AppCenter

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: react-native-test.apk
    ArtifactName: react-native-test
    publishLocation: Container

### --------------------------------------------------------------------------------
### Post build
### --------------------------------------------------------------------------------

# - task: CopyFiles@2
#   inputs:
#     contents: react-native-test.apk
#     targetFolder: $(Build.ArtifactStagingDirectory)

# - task: ShellScript@2
#   inputs:
#     scriptPath: appcenter-post-build.sh
#   displayName: Post Build Script

# - task: PublishBuildArtifacts@1
